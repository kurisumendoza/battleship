{"version":3,"file":"bundle.1cbfa0c26deda9fa84c8.js","mappings":"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","sources":["webpack://battleship/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://battleship/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://battleship/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://battleship/./src/styles/main.css","webpack://battleship/./node_modules/css-loader/dist/runtime/api.js","webpack://battleship/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://battleship/./node_modules/css-loader/dist/runtime/getUrl.js","webpack://battleship/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://battleship/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://battleship/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://battleship/webpack/bootstrap","webpack://battleship/webpack/runtime/compat get default export","webpack://battleship/webpack/runtime/define property getters","webpack://battleship/webpack/runtime/global","webpack://battleship/webpack/runtime/hasOwnProperty shorthand","webpack://battleship/webpack/runtime/publicPath","webpack://battleship/webpack/runtime/jsonp chunk loading","webpack://battleship/webpack/runtime/nonce","webpack://battleship/./src/styles/main.css?e80a","webpack://battleship/./src/scripts/selectors.js","webpack://battleship/./src/scripts/ship.js","webpack://battleship/./src/scripts/constants.js","webpack://battleship/./src/scripts/gameboard.js","webpack://battleship/./src/scripts/shipsConfig.js","webpack://battleship/./src/scripts/player.js","webpack://battleship/./src/scripts/computerPlayer.js","webpack://battleship/./src/scripts/createPlayers.js","webpack://battleship/./src/scripts/activePlayer.js","webpack://battleship/./src/scripts/loadingScreen.js","webpack://battleship/./src/scripts/helpers.js","webpack://battleship/./src/scripts/gameplayUI.js","webpack://battleship/./src/scripts/gameStatusUI.js","webpack://battleship/./src/scripts/gameplayController.js","webpack://battleship/./src/scripts/gameSetupUI.js","webpack://battleship/./src/scripts/gameSetupController.js","webpack://battleship/./src/scripts/resetGame.js","webpack://battleship/./src/index.js"],"sourcesContent":["\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"../assets/fonts/fredoka-variable-font.woff2\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(\"../assets/fonts/inclusive-sans-variable-font.woff2\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `@font-face {\r\n  font-family: 'Fredoka';\r\n  src: url(${___CSS_LOADER_URL_REPLACEMENT_0___}) format('woff2');\r\n}\r\n\r\n@font-face {\r\n  font-family: 'Inclusive Sans';\r\n  src: url(${___CSS_LOADER_URL_REPLACEMENT_1___}) format('woff2');\r\n}\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\n:root {\r\n  --main-font: 'Fredoka', system-ui;\r\n  --secondary-font: 'Inclusive Sans', sans-serif;\r\n  --header-font-size: 4rem;\r\n\r\n  --header-font-weight: 600;\r\n\r\n  --background-color: #023047;\r\n  --cell-color: #caf0f8;\r\n  --button-color: #219ebc;\r\n\r\n  --player-status-color: #8ecae6;\r\n\r\n  --error-color: #ff6666;\r\n\r\n  --miss-color: #415a77;\r\n\r\n  --ship-background: #979dac;\r\n  --is-placed-color: #5c677d;\r\n  --carrier-color: #c5172e;\r\n  --battleship-color: #f4631e;\r\n  --cruiser-color: #732255;\r\n  --submarine-color: #fcf259;\r\n  --destroyer-color: #399918;\r\n\r\n  --main-font-color: #e0e1dd;\r\n  --secondary-font-color: #1b263b;\r\n  --summary-values-font-color: #ffee32;\r\n}\r\n\r\nbody {\r\n  background-color: var(--background-color);\r\n  padding: 2.5% 5%;\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n}\r\n\r\nbody,\r\ndialog {\r\n  user-select: none;\r\n}\r\n\r\nbutton,\r\n.cell,\r\n.ship-model {\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:focus {\r\n  outline: none;\r\n}\r\n\r\nmain {\r\n  display: grid;\r\n  grid-template-columns: 0.75fr 1.5fr 0.75fr;\r\n  grid-template-rows: auto 1fr;\r\n  color: var(--main-font-color);\r\n  position: relative;\r\n}\r\n\r\nheader {\r\n  grid-column: span 3;\r\n  justify-self: center;\r\n}\r\n\r\nheader h1 {\r\n  font-family: var(--main-font);\r\n  font-weight: var(--header-font-weight);\r\n  font-size: var(--header-font-size);\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.stats-container {\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: auto 1fr;\r\n  width: 75%;\r\n  min-width: 300px;\r\n  margin-left: auto;\r\n  padding-right: 2rem;\r\n  font-family: var(--secondary-font);\r\n}\r\n\r\n.players-stats {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n  line-height: 1.25rem;\r\n}\r\n\r\n.player1-stats,\r\n.player2-stats {\r\n  padding: 1rem;\r\n  background-color: var(--player-status-color);\r\n  color: var(--secondary-font-color);\r\n}\r\n\r\n.player1 span,\r\n.player2 span {\r\n  font-size: 1.25rem;\r\n  font-weight: var(--header-font-weight);\r\n}\r\n\r\n.hp-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n}\r\n\r\n.hp-bar {\r\n  height: 1.1rem;\r\n  border: 2px solid #0d1321;\r\n  background-color: #d9d9d9;\r\n  width: 100%;\r\n  padding: 0.1rem;\r\n}\r\n\r\n.actual-hp {\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #0b9116;\r\n}\r\n\r\n.remaining-ships-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  gap: 1rem;\r\n}\r\n\r\n.remaining-ships-container div {\r\n  width: 100%;\r\n  aspect-ratio: 1 / 0.5;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.your-board-preview {\r\n  padding-top: 1rem;\r\n  text-align: center;\r\n}\r\n\r\n.your-board {\r\n  display: grid;\r\n  grid-template-columns: repeat(10, 1fr);\r\n  gap: 1%;\r\n  margin-top: 0.5rem;\r\n}\r\n\r\n.your-board .hit {\r\n  font-size: clamp(0.25rem, 1vw, 1rem);\r\n}\r\n\r\n.gameplay-container {\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: 1fr auto 1fr;\r\n  justify-items: center;\r\n  padding: 0 20px;\r\n}\r\n\r\n.gameboard-container,\r\n.ship-placement-container {\r\n  padding: 0 1rem;\r\n  min-width: 500px;\r\n  max-width: 800px;\r\n}\r\n\r\n.gameboard,\r\n.ship-placement-board {\r\n  display: grid;\r\n  grid-template-columns: repeat(10, 1fr);\r\n  gap: 1%;\r\n  margin: 0 auto;\r\n  justify-items: center;\r\n}\r\n\r\n.cell {\r\n  background-color: var(--cell-color);\r\n  width: 100%;\r\n  aspect-ratio: 1 / 1;\r\n  transition: transform 200ms;\r\n}\r\n\r\n.gameboard .cell:hover {\r\n  transform: scale(1.125);\r\n  filter: brightness(0.95);\r\n  border-radius: 5%;\r\n}\r\n\r\n.gameboard .cell:active {\r\n  transform: scale(1);\r\n}\r\n\r\n.disable-gameboard {\r\n  pointer-events: none;\r\n}\r\n\r\n.game-stats-container {\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  width: 100%;\r\n  min-width: 300px;\r\n  padding-top: 1rem;\r\n  margin: auto;\r\n  padding-left: 2rem;\r\n  font-family: var(--secondary-font);\r\n}\r\n\r\n.turn-display {\r\n  font-weight: var(--header-font-weight);\r\n  font-size: 1.5rem;\r\n  text-align: center;\r\n}\r\n\r\n.end-turn-btn button,\r\n.play-again-btn button {\r\n  border: none;\r\n  margin: 2rem 0;\r\n  height: 3rem;\r\n  width: 100%;\r\n  font-family: var(--secondary-font);\r\n  font-size: 1.25rem;\r\n  color: var(--secondary-font-color);\r\n  background-color: var(--button-color);\r\n  transition: transform 200ms;\r\n}\r\n\r\n.end-turn-btn button:hover,\r\n.play-again-btn button:hover {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.game-message-display {\r\n  text-align: center;\r\n  font-family: var(--secondary-font);\r\n  font-size: 1rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.winner-display {\r\n  visibility: hidden;\r\n}\r\n\r\n.winner-display p:first-of-type {\r\n  text-align: center;\r\n  font-family: var(--main-font);\r\n  font-size: 3rem;\r\n  font-weight: 600;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.game-summary {\r\n  margin-left: 1rem;\r\n}\r\n\r\n.game-summary span {\r\n  color: var(--summary-values-font-color);\r\n}\r\n\r\n.play-again-btn {\r\n  visibility: hidden;\r\n}\r\n\r\n.start-screen[open] {\r\n  height: 100%;\r\n  width: 100%;\r\n  max-width: none;\r\n  max-height: none;\r\n  border: none;\r\n  background-color: var(--background-color);\r\n  color: var(--main-font-color);\r\n}\r\n\r\n.start-screen-content {\r\n  display: grid;\r\n  grid-template-rows: auto 1fr;\r\n  justify-items: center;\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n  padding: 2.5% 5%;\r\n}\r\n\r\n.start-screen-content h1 {\r\n  font-family: var(--main-font);\r\n  font-weight: var(--header-font-weight);\r\n  font-size: 10rem;\r\n  color: var(--main-font-color);\r\n}\r\n\r\n.game-setup-container {\r\n  display: grid;\r\n  grid-template-columns: 0.75fr 1.5fr 0.75fr;\r\n  width: 100%;\r\n}\r\n\r\n.start-new-game {\r\n  grid-column-start: 2;\r\n  border: none;\r\n  margin: 0 auto;\r\n  margin-top: 5rem;\r\n  font-family: var(--secondary-font);\r\n  font-size: 2rem;\r\n  color: var(--secondary-font-color);\r\n  height: 5rem;\r\n  width: 80%;\r\n  background-color: var(--button-color);\r\n  transition: transform 200ms;\r\n}\r\n\r\n.start-new-game:hover {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.game-modes-container {\r\n  grid-column-start: 2;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.vs-player,\r\n.vs-computer {\r\n  border: none;\r\n  margin-top: 5rem;\r\n  font-family: var(--secondary-font);\r\n  font-size: 2rem;\r\n  line-height: 2rem;\r\n  color: var(--secondary-font-color);\r\n  height: 5rem;\r\n  width: 80%;\r\n  background-color: var(--button-color);\r\n  transition: transform 200ms;\r\n}\r\n\r\n.vs-player:hover,\r\n.vs-computer:hover {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.ship-setup-container {\r\n  padding-right: 2rem;\r\n  width: 100%;\r\n  min-width: 300px;\r\n  display: grid;\r\n  grid-template-rows: auto 1fr;\r\n  gap: 1rem;\r\n}\r\n\r\n.ship-setup-label,\r\n.input-name-label {\r\n  justify-self: center;\r\n  font-family: var(--secondary-font);\r\n  margin-top: 1rem;\r\n  font-size: 1.5rem;\r\n}\r\n\r\n.ships-container {\r\n  display: grid;\r\n  width: 100%;\r\n  gap: 0.5rem;\r\n  color: var(--secondary-font-color);\r\n}\r\n\r\n.ship {\r\n  justify-self: center;\r\n  display: grid;\r\n  grid-template-columns: 0.75fr 0.75fr 1fr;\r\n  width: 100%;\r\n  padding: 3% 5%;\r\n  white-space: nowrap;\r\n  background-color: var(--ship-background);\r\n  gap: 0.5rem;\r\n}\r\n\r\n.ship-name {\r\n  font-family: var(--secondary-font);\r\n  font-size: 1.25rem;\r\n  line-height: 1.25rem;\r\n}\r\n\r\n.ship-health {\r\n  font-family: var(--secondary-font);\r\n  font-size: 0.75rem;\r\n  line-height: 1.25rem;\r\n}\r\n\r\n.ship-btns {\r\n  justify-self: end;\r\n  display: flex;\r\n  gap: 0.25rem;\r\n}\r\n\r\n.change-orientation-btn,\r\n.undo-btn {\r\n  width: 1.5rem;\r\n  height: 1.5rem;\r\n  border: none;\r\n  transition: transform 100ms;\r\n}\r\n\r\n.change-orientation-btn:hover,\r\n.undo-btn:hover {\r\n  transform: scale(1.1);\r\n  background-color: bisque;\r\n}\r\n\r\n.ship-model {\r\n  grid-column: span 3;\r\n  height: 2.5rem;\r\n  transition: transform 200ms;\r\n}\r\n\r\n.ship-model:hover {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.ship-placement-board {\r\n  margin-top: 1rem;\r\n}\r\n\r\n.name-start-container {\r\n  padding: 0 10%;\r\n  width: 100%;\r\n  min-width: 300px;\r\n}\r\n\r\n.name-start-container input {\r\n  user-select: text;\r\n  height: 2.5rem;\r\n  width: 100%;\r\n  font-family: var(--secondary-font);\r\n  font-size: 1.75rem;\r\n  text-align: center;\r\n  padding: 1.5rem 5% 1.5rem 5%;\r\n  margin-top: 1rem;\r\n  border: none;\r\n}\r\n\r\n.name-start-container input:focus {\r\n  background-color: whitesmoke;\r\n  outline: none;\r\n  border: none;\r\n  transform: scale(1.1);\r\n}\r\n\r\n.action-btn-container {\r\n  margin-top: 5rem;\r\n}\r\n\r\n.action-btn {\r\n  border: none;\r\n  height: 3.5rem;\r\n  width: 100%;\r\n  font-family: var(--secondary-font);\r\n  font-size: 2rem;\r\n  color: var(--secondary-font-color);\r\n  background-color: var(--button-color);\r\n  transition: transform 100ms;\r\n}\r\n\r\n.action-btn:hover {\r\n  transform: scale(1.1);\r\n}\r\n\r\n.error-msg {\r\n  margin-top: 1rem;\r\n  color: var(--error-color);\r\n  font-family: var(--secondary-font);\r\n  font-size: 1.25rem;\r\n  text-align: center;\r\n}\r\n\r\n/* Board state during ship placement and gameplay */\r\n.has-ship {\r\n  transform: scale(1.125);\r\n}\r\n\r\n.carrier {\r\n  background-color: var(--carrier-color);\r\n}\r\n\r\n.battleship {\r\n  background-color: var(--battleship-color);\r\n}\r\n\r\n.cruiser {\r\n  background-color: var(--cruiser-color);\r\n}\r\n\r\n.submarine {\r\n  background-color: var(--submarine-color);\r\n}\r\n\r\n.destroyer {\r\n  background-color: var(--destroyer-color);\r\n}\r\n\r\n.is-placed {\r\n  background-color: var(--is-placed-color);\r\n  pointer-events: none;\r\n}\r\n\r\n.miss {\r\n  background-color: var(--miss-color);\r\n}\r\n\r\n.hit {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: clamp(1rem, 2vw, 2rem);\r\n}\r\n\r\n.sunk {\r\n  filter: brightness(0.75);\r\n}\r\n\r\n/* Loading screen */\r\n.loading-screen[open] {\r\n  height: 100%;\r\n  width: 100%;\r\n  max-width: none;\r\n  max-height: none;\r\n  border: none;\r\n  background-color: var(--background-color);\r\n  color: var(--main-font-color);\r\n}\r\n\r\n.loading-screen-content {\r\n  max-width: 1400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  padding: 2.5% 5%;\r\n}\r\n\r\n.loading-screen-content h1 {\r\n  font-family: var(--main-font);\r\n  font-weight: var(--header-font-weight);\r\n  font-size: var(--header-font-size);\r\n}\r\n\r\n.loading-screen-message {\r\n  font-family: var(--secondary-font);\r\n  font-size: 2rem;\r\n  margin: 5rem 0 2rem 0;\r\n}\r\n\r\n.loading-screen button {\r\n  display: none;\r\n  border: none;\r\n  margin: 2rem 0;\r\n  height: 3rem;\r\n  width: 20%;\r\n  font-family: var(--secondary-font);\r\n  font-size: 1.5rem;\r\n  background-color: var(--button-color);\r\n  color: var(--secondary-font-color);\r\n  transition: transform 100ms;\r\n}\r\n\r\n.loading-screen button:hover {\r\n  transform: scale(1.1);\r\n}\r\n\r\n.loader-message {\r\n  font-family: var(--secondary-font);\r\n  font-size: 1.5rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.loader-animation {\r\n  width: 60px;\r\n  margin: auto;\r\n  aspect-ratio: 4;\r\n  background: radial-gradient(circle closest-side, #fdfaf6 90%, #0000) 0 /\r\n    calc(100% / 3) 100% space;\r\n  clip-path: inset(0 100% 0 0);\r\n  animation: l1 1s steps(4) infinite;\r\n}\r\n\r\n@keyframes l1 {\r\n  to {\r\n    clip-path: inset(0 -34% 0 0);\r\n  }\r\n}\r\n\r\n@media (max-width: 767px), (orientation: portrait) {\r\n  :root {\r\n    --header-font-size: 3rem;\r\n  }\r\n\r\n  main {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: repeat(4, auto);\r\n    gap: 1rem;\r\n  }\r\n\r\n  header {\r\n    grid-column: auto;\r\n  }\r\n\r\n  .stats-container {\r\n    grid-row: 4;\r\n    width: 100%;\r\n    min-width: none;\r\n    padding-right: 0;\r\n    grid-template-columns: 1.1fr 0.9fr;\r\n    gap: 1rem;\r\n  }\r\n\r\n  .player1-stats,\r\n  .player2-stats {\r\n    width: 100%;\r\n    padding: 0.5rem;\r\n  }\r\n\r\n  .remaining-ships-container {\r\n    gap: 0.5rem;\r\n  }\r\n\r\n  .remaining-ships-container div {\r\n    aspect-ratio: 1 / 0.5;\r\n    font-size: 0.5rem;\r\n  }\r\n\r\n  .gameboard-container,\r\n  .ship-placement-container {\r\n    padding: 1rem 0 calc(1rem + 1vh + 4vw) 0; /* Prevent gameboard grid overflow*/\r\n    width: 100%;\r\n    min-width: 50px;\r\n    max-width: none;\r\n  }\r\n\r\n  .gameboard-container {\r\n    grid-row: 3;\r\n  }\r\n\r\n  .your-board-preview {\r\n    padding-top: 0;\r\n  }\r\n\r\n  .your-board-preview p {\r\n    display: none;\r\n  }\r\n\r\n  .your-board {\r\n    margin-top: 0;\r\n  }\r\n\r\n  .game-stats-container {\r\n    grid-row: 2;\r\n    grid-template-columns: 1.25fr 0.75fr;\r\n    grid-template-rows: auto auto 0px;\r\n    grid-template-areas:\r\n      'player end-turn'\r\n      'message message';\r\n    align-items: center;\r\n    margin-right: 0;\r\n    padding-top: 0;\r\n    padding-left: 0;\r\n    width: 100%;\r\n    min-width: none;\r\n  }\r\n\r\n  .turn-display {\r\n    grid-area: player;\r\n    text-align: left;\r\n    font-size: 1.25rem;\r\n  }\r\n\r\n  .turn-display span::after {\r\n    content: ' ';\r\n  }\r\n\r\n  .turn-display br {\r\n    display: none;\r\n  }\r\n\r\n  .end-turn-btn {\r\n    grid-area: end-turn;\r\n    width: 100%;\r\n  }\r\n\r\n  .end-turn-btn button {\r\n    margin: 0;\r\n    font-size: 1rem;\r\n  }\r\n\r\n  .game-message-display {\r\n    grid-area: message;\r\n    justify-self: bottom;\r\n    margin-bottom: 0;\r\n    margin-top: 0.5rem;\r\n    height: 1rem;\r\n  }\r\n\r\n  .winner-display {\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 45%;\r\n    transform: translate(-50%, -50%);\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: var(--background-color);\r\n    width: 80%;\r\n    padding: 1rem;\r\n  }\r\n\r\n  .play-again-btn {\r\n    align-self: center;\r\n    width: 100%;\r\n  }\r\n\r\n  .play-again-btn button {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  .start-screen-content h1 {\r\n    font-size: var(--header-font-size);\r\n  }\r\n\r\n  .game-setup-container {\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: repeat(3, auto);\r\n    justify-items: center;\r\n    gap: 1rem;\r\n  }\r\n\r\n  .start-new-game,\r\n  .vs-player,\r\n  .vs-computer {\r\n    font-size: 1.75rem;\r\n  }\r\n\r\n  .start-new-game,\r\n  .game-modes-container {\r\n    grid-column-start: 1;\r\n  }\r\n\r\n  .game-modes-container {\r\n    width: 80%;\r\n  }\r\n\r\n  .ship-setup-container {\r\n    grid-row: 2;\r\n    padding-right: 0;\r\n    min-width: none;\r\n    gap: 0;\r\n  }\r\n\r\n  .ship-setup-label {\r\n    display: none;\r\n  }\r\n\r\n  .ship-placement-container::before {\r\n    content: 'Position your ships!';\r\n    display: block;\r\n    font-family: var(--main-font);\r\n    color: var(--main-font-color);\r\n    font-size: 1.75rem;\r\n    text-align: center;\r\n  }\r\n\r\n  .ship-placement-board {\r\n    width: 100%;\r\n  }\r\n\r\n  .ships-container {\r\n    grid-template-columns: auto auto;\r\n    margin: auto;\r\n  }\r\n\r\n  .ship {\r\n    padding: 0.5rem;\r\n    grid-template-columns: 1fr auto;\r\n    grid-template-rows: repeat(3, auto);\r\n    gap: 0.25rem;\r\n  }\r\n\r\n  .ship:first-of-type {\r\n    grid-column: span 2;\r\n  }\r\n\r\n  .ship-name {\r\n    font-size: 1rem;\r\n    font-weight: var(--header-font-weight);\r\n    line-height: 1rem;\r\n  }\r\n\r\n  .ship-health {\r\n    line-height: 1rem;\r\n    grid-row: 2;\r\n  }\r\n\r\n  .ship-btns {\r\n    flex-direction: column;\r\n    grid-row: 1;\r\n    grid-row: span 3;\r\n  }\r\n\r\n  .change-orientation-btn,\r\n  .undo-btn {\r\n    width: 3rem;\r\n    height: 100%;\r\n  }\r\n\r\n  .ship-model {\r\n    grid-column: auto;\r\n    width: 100% !important;\r\n  }\r\n\r\n  .name-start-container {\r\n    min-width: none;\r\n  }\r\n\r\n  .input-name-label {\r\n    margin-top: 0;\r\n  }\r\n\r\n  .name-start-container input {\r\n    font-size: 2rem;\r\n    margin-top: 0.5rem;\r\n  }\r\n\r\n  .action-btn-container {\r\n    margin-top: 2rem;\r\n  }\r\n\r\n  .error-msg {\r\n    margin-bottom: 2rem;\r\n  }\r\n\r\n  .loading-screen-message {\r\n    text-align: center;\r\n  }\r\n\r\n  .loading-screen button {\r\n    width: 80%;\r\n  }\r\n}\r\n\r\n@media (min-width: 768px) and (max-width: 1200px) and (orientation: landscape) {\r\n  .start-screen-content h1 {\r\n    font-size: 8rem;\r\n  }\r\n\r\n  .vs-player,\r\n  .vs-computer {\r\n    margin-top: calc(2rem + 3vh);\r\n  }\r\n\r\n  .ship-setup-container,\r\n  .name-start-container {\r\n    min-width: 200px;\r\n  }\r\n\r\n  .ship-setup-container {\r\n    padding-right: 0;\r\n  }\r\n\r\n  .name-start-container {\r\n    padding: 0;\r\n  }\r\n\r\n  .ship-setup-label,\r\n  .input-name-label {\r\n    font-size: 1.25rem;\r\n  }\r\n\r\n  .ship {\r\n    padding: 0.5rem;\r\n    grid-template-columns: 1fr auto;\r\n    gap: 0.25rem;\r\n  }\r\n\r\n  .ship-name {\r\n    font-weight: var(--header-font-weight);\r\n    font-size: 1rem;\r\n  }\r\n\r\n  .ship-health {\r\n    margin-right: 0.25rem;\r\n  }\r\n\r\n  .ship-model {\r\n    height: 2rem;\r\n  }\r\n\r\n  .gameboard-container,\r\n  .ship-placement-container {\r\n    min-width: 300px;\r\n  }\r\n\r\n  .stats-container,\r\n  .game-stats-container {\r\n    min-width: 200px;\r\n    padding: 0;\r\n  }\r\n\r\n  .stats-container {\r\n    width: 100%;\r\n  }\r\n\r\n  .action-btn {\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  .player1 span,\r\n  .player2 span {\r\n    font-size: 1.1rem;\r\n  }\r\n\r\n  .remaining-ships-container div {\r\n    aspect-ratio: 1 / 1;\r\n  }\r\n\r\n  .your-board-preview {\r\n    padding: 1rem;\r\n  }\r\n}\r\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/main.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"@font-face {\\r\\n  font-family: 'Fredoka';\\r\\n  src: url('../assets/fonts/fredoka-variable-font.woff2') format('woff2');\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'Inclusive Sans';\\r\\n  src: url('../assets/fonts/inclusive-sans-variable-font.woff2') format('woff2');\\r\\n}\\r\\n\\r\\n* {\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\n:root {\\r\\n  --main-font: 'Fredoka', system-ui;\\r\\n  --secondary-font: 'Inclusive Sans', sans-serif;\\r\\n  --header-font-size: 4rem;\\r\\n\\r\\n  --header-font-weight: 600;\\r\\n\\r\\n  --background-color: #023047;\\r\\n  --cell-color: #caf0f8;\\r\\n  --button-color: #219ebc;\\r\\n\\r\\n  --player-status-color: #8ecae6;\\r\\n\\r\\n  --error-color: #ff6666;\\r\\n\\r\\n  --miss-color: #415a77;\\r\\n\\r\\n  --ship-background: #979dac;\\r\\n  --is-placed-color: #5c677d;\\r\\n  --carrier-color: #c5172e;\\r\\n  --battleship-color: #f4631e;\\r\\n  --cruiser-color: #732255;\\r\\n  --submarine-color: #fcf259;\\r\\n  --destroyer-color: #399918;\\r\\n\\r\\n  --main-font-color: #e0e1dd;\\r\\n  --secondary-font-color: #1b263b;\\r\\n  --summary-values-font-color: #ffee32;\\r\\n}\\r\\n\\r\\nbody {\\r\\n  background-color: var(--background-color);\\r\\n  padding: 2.5% 5%;\\r\\n  max-width: 1400px;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\nbody,\\r\\ndialog {\\r\\n  user-select: none;\\r\\n}\\r\\n\\r\\nbutton,\\r\\n.cell,\\r\\n.ship-model {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\nbutton:focus {\\r\\n  outline: none;\\r\\n}\\r\\n\\r\\nmain {\\r\\n  display: grid;\\r\\n  grid-template-columns: 0.75fr 1.5fr 0.75fr;\\r\\n  grid-template-rows: auto 1fr;\\r\\n  color: var(--main-font-color);\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\nheader {\\r\\n  grid-column: span 3;\\r\\n  justify-self: center;\\r\\n}\\r\\n\\r\\nheader h1 {\\r\\n  font-family: var(--main-font);\\r\\n  font-weight: var(--header-font-weight);\\r\\n  font-size: var(--header-font-size);\\r\\n  margin-bottom: 1rem;\\r\\n}\\r\\n\\r\\n.stats-container {\\r\\n  display: grid;\\r\\n  grid-template-columns: 1fr;\\r\\n  grid-template-rows: auto 1fr;\\r\\n  width: 75%;\\r\\n  min-width: 300px;\\r\\n  margin-left: auto;\\r\\n  padding-right: 2rem;\\r\\n  font-family: var(--secondary-font);\\r\\n}\\r\\n\\r\\n.players-stats {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  gap: 1rem;\\r\\n  line-height: 1.25rem;\\r\\n}\\r\\n\\r\\n.player1-stats,\\r\\n.player2-stats {\\r\\n  padding: 1rem;\\r\\n  background-color: var(--player-status-color);\\r\\n  color: var(--secondary-font-color);\\r\\n}\\r\\n\\r\\n.player1 span,\\r\\n.player2 span {\\r\\n  font-size: 1.25rem;\\r\\n  font-weight: var(--header-font-weight);\\r\\n}\\r\\n\\r\\n.hp-container {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  gap: 5px;\\r\\n}\\r\\n\\r\\n.hp-bar {\\r\\n  height: 1.1rem;\\r\\n  border: 2px solid #0d1321;\\r\\n  background-color: #d9d9d9;\\r\\n  width: 100%;\\r\\n  padding: 0.1rem;\\r\\n}\\r\\n\\r\\n.actual-hp {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  background-color: #0b9116;\\r\\n}\\r\\n\\r\\n.remaining-ships-container {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  gap: 1rem;\\r\\n}\\r\\n\\r\\n.remaining-ships-container div {\\r\\n  width: 100%;\\r\\n  aspect-ratio: 1 / 0.5;\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.your-board-preview {\\r\\n  padding-top: 1rem;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.your-board {\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(10, 1fr);\\r\\n  gap: 1%;\\r\\n  margin-top: 0.5rem;\\r\\n}\\r\\n\\r\\n.your-board .hit {\\r\\n  font-size: clamp(0.25rem, 1vw, 1rem);\\r\\n}\\r\\n\\r\\n.gameplay-container {\\r\\n  display: grid;\\r\\n  grid-template-columns: 1fr;\\r\\n  grid-template-rows: 1fr auto 1fr;\\r\\n  justify-items: center;\\r\\n  padding: 0 20px;\\r\\n}\\r\\n\\r\\n.gameboard-container,\\r\\n.ship-placement-container {\\r\\n  padding: 0 1rem;\\r\\n  min-width: 500px;\\r\\n  max-width: 800px;\\r\\n}\\r\\n\\r\\n.gameboard,\\r\\n.ship-placement-board {\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(10, 1fr);\\r\\n  gap: 1%;\\r\\n  margin: 0 auto;\\r\\n  justify-items: center;\\r\\n}\\r\\n\\r\\n.cell {\\r\\n  background-color: var(--cell-color);\\r\\n  width: 100%;\\r\\n  aspect-ratio: 1 / 1;\\r\\n  transition: transform 200ms;\\r\\n}\\r\\n\\r\\n.gameboard .cell:hover {\\r\\n  transform: scale(1.125);\\r\\n  filter: brightness(0.95);\\r\\n  border-radius: 5%;\\r\\n}\\r\\n\\r\\n.gameboard .cell:active {\\r\\n  transform: scale(1);\\r\\n}\\r\\n\\r\\n.disable-gameboard {\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\n.game-stats-container {\\r\\n  display: grid;\\r\\n  grid-template-columns: 1fr;\\r\\n  width: 100%;\\r\\n  min-width: 300px;\\r\\n  padding-top: 1rem;\\r\\n  margin: auto;\\r\\n  padding-left: 2rem;\\r\\n  font-family: var(--secondary-font);\\r\\n}\\r\\n\\r\\n.turn-display {\\r\\n  font-weight: var(--header-font-weight);\\r\\n  font-size: 1.5rem;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.end-turn-btn button,\\r\\n.play-again-btn button {\\r\\n  border: none;\\r\\n  margin: 2rem 0;\\r\\n  height: 3rem;\\r\\n  width: 100%;\\r\\n  font-family: var(--secondary-font);\\r\\n  font-size: 1.25rem;\\r\\n  color: var(--secondary-font-color);\\r\\n  background-color: var(--button-color);\\r\\n  transition: transform 200ms;\\r\\n}\\r\\n\\r\\n.end-turn-btn button:hover,\\r\\n.play-again-btn button:hover {\\r\\n  transform: scale(1.05);\\r\\n}\\r\\n\\r\\n.game-message-display {\\r\\n  text-align: center;\\r\\n  font-family: var(--secondary-font);\\r\\n  font-size: 1rem;\\r\\n  margin-bottom: 2rem;\\r\\n}\\r\\n\\r\\n.winner-display {\\r\\n  visibility: hidden;\\r\\n}\\r\\n\\r\\n.winner-display p:first-of-type {\\r\\n  text-align: center;\\r\\n  font-family: var(--main-font);\\r\\n  font-size: 3rem;\\r\\n  font-weight: 600;\\r\\n  margin-bottom: 2rem;\\r\\n}\\r\\n\\r\\n.game-summary {\\r\\n  margin-left: 1rem;\\r\\n}\\r\\n\\r\\n.game-summary span {\\r\\n  color: var(--summary-values-font-color);\\r\\n}\\r\\n\\r\\n.play-again-btn {\\r\\n  visibility: hidden;\\r\\n}\\r\\n\\r\\n.start-screen[open] {\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n  max-width: none;\\r\\n  max-height: none;\\r\\n  border: none;\\r\\n  background-color: var(--background-color);\\r\\n  color: var(--main-font-color);\\r\\n}\\r\\n\\r\\n.start-screen-content {\\r\\n  display: grid;\\r\\n  grid-template-rows: auto 1fr;\\r\\n  justify-items: center;\\r\\n  max-width: 1400px;\\r\\n  margin: 0 auto;\\r\\n  padding: 2.5% 5%;\\r\\n}\\r\\n\\r\\n.start-screen-content h1 {\\r\\n  font-family: var(--main-font);\\r\\n  font-weight: var(--header-font-weight);\\r\\n  font-size: 10rem;\\r\\n  color: var(--main-font-color);\\r\\n}\\r\\n\\r\\n.game-setup-container {\\r\\n  display: grid;\\r\\n  grid-template-columns: 0.75fr 1.5fr 0.75fr;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.start-new-game {\\r\\n  grid-column-start: 2;\\r\\n  border: none;\\r\\n  margin: 0 auto;\\r\\n  margin-top: 5rem;\\r\\n  font-family: var(--secondary-font);\\r\\n  font-size: 2rem;\\r\\n  color: var(--secondary-font-color);\\r\\n  height: 5rem;\\r\\n  width: 80%;\\r\\n  background-color: var(--button-color);\\r\\n  transition: transform 200ms;\\r\\n}\\r\\n\\r\\n.start-new-game:hover {\\r\\n  transform: scale(1.05);\\r\\n}\\r\\n\\r\\n.game-modes-container {\\r\\n  grid-column-start: 2;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.vs-player,\\r\\n.vs-computer {\\r\\n  border: none;\\r\\n  margin-top: 5rem;\\r\\n  font-family: var(--secondary-font);\\r\\n  font-size: 2rem;\\r\\n  line-height: 2rem;\\r\\n  color: var(--secondary-font-color);\\r\\n  height: 5rem;\\r\\n  width: 80%;\\r\\n  background-color: var(--button-color);\\r\\n  transition: transform 200ms;\\r\\n}\\r\\n\\r\\n.vs-player:hover,\\r\\n.vs-computer:hover {\\r\\n  transform: scale(1.05);\\r\\n}\\r\\n\\r\\n.ship-setup-container {\\r\\n  padding-right: 2rem;\\r\\n  width: 100%;\\r\\n  min-width: 300px;\\r\\n  display: grid;\\r\\n  grid-template-rows: auto 1fr;\\r\\n  gap: 1rem;\\r\\n}\\r\\n\\r\\n.ship-setup-label,\\r\\n.input-name-label {\\r\\n  justify-self: center;\\r\\n  font-family: var(--secondary-font);\\r\\n  margin-top: 1rem;\\r\\n  font-size: 1.5rem;\\r\\n}\\r\\n\\r\\n.ships-container {\\r\\n  display: grid;\\r\\n  width: 100%;\\r\\n  gap: 0.5rem;\\r\\n  color: var(--secondary-font-color);\\r\\n}\\r\\n\\r\\n.ship {\\r\\n  justify-self: center;\\r\\n  display: grid;\\r\\n  grid-template-columns: 0.75fr 0.75fr 1fr;\\r\\n  width: 100%;\\r\\n  padding: 3% 5%;\\r\\n  white-space: nowrap;\\r\\n  background-color: var(--ship-background);\\r\\n  gap: 0.5rem;\\r\\n}\\r\\n\\r\\n.ship-name {\\r\\n  font-family: var(--secondary-font);\\r\\n  font-size: 1.25rem;\\r\\n  line-height: 1.25rem;\\r\\n}\\r\\n\\r\\n.ship-health {\\r\\n  font-family: var(--secondary-font);\\r\\n  font-size: 0.75rem;\\r\\n  line-height: 1.25rem;\\r\\n}\\r\\n\\r\\n.ship-btns {\\r\\n  justify-self: end;\\r\\n  display: flex;\\r\\n  gap: 0.25rem;\\r\\n}\\r\\n\\r\\n.change-orientation-btn,\\r\\n.undo-btn {\\r\\n  width: 1.5rem;\\r\\n  height: 1.5rem;\\r\\n  border: none;\\r\\n  transition: transform 100ms;\\r\\n}\\r\\n\\r\\n.change-orientation-btn:hover,\\r\\n.undo-btn:hover {\\r\\n  transform: scale(1.1);\\r\\n  background-color: bisque;\\r\\n}\\r\\n\\r\\n.ship-model {\\r\\n  grid-column: span 3;\\r\\n  height: 2.5rem;\\r\\n  transition: transform 200ms;\\r\\n}\\r\\n\\r\\n.ship-model:hover {\\r\\n  transform: scale(1.05);\\r\\n}\\r\\n\\r\\n.ship-placement-board {\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n\\r\\n.name-start-container {\\r\\n  padding: 0 10%;\\r\\n  width: 100%;\\r\\n  min-width: 300px;\\r\\n}\\r\\n\\r\\n.name-start-container input {\\r\\n  user-select: text;\\r\\n  height: 2.5rem;\\r\\n  width: 100%;\\r\\n  font-family: var(--secondary-font);\\r\\n  font-size: 1.75rem;\\r\\n  text-align: center;\\r\\n  padding: 1.5rem 5% 1.5rem 5%;\\r\\n  margin-top: 1rem;\\r\\n  border: none;\\r\\n}\\r\\n\\r\\n.name-start-container input:focus {\\r\\n  background-color: whitesmoke;\\r\\n  outline: none;\\r\\n  border: none;\\r\\n  transform: scale(1.1);\\r\\n}\\r\\n\\r\\n.action-btn-container {\\r\\n  margin-top: 5rem;\\r\\n}\\r\\n\\r\\n.action-btn {\\r\\n  border: none;\\r\\n  height: 3.5rem;\\r\\n  width: 100%;\\r\\n  font-family: var(--secondary-font);\\r\\n  font-size: 2rem;\\r\\n  color: var(--secondary-font-color);\\r\\n  background-color: var(--button-color);\\r\\n  transition: transform 100ms;\\r\\n}\\r\\n\\r\\n.action-btn:hover {\\r\\n  transform: scale(1.1);\\r\\n}\\r\\n\\r\\n.error-msg {\\r\\n  margin-top: 1rem;\\r\\n  color: var(--error-color);\\r\\n  font-family: var(--secondary-font);\\r\\n  font-size: 1.25rem;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n/* Board state during ship placement and gameplay */\\r\\n.has-ship {\\r\\n  transform: scale(1.125);\\r\\n}\\r\\n\\r\\n.carrier {\\r\\n  background-color: var(--carrier-color);\\r\\n}\\r\\n\\r\\n.battleship {\\r\\n  background-color: var(--battleship-color);\\r\\n}\\r\\n\\r\\n.cruiser {\\r\\n  background-color: var(--cruiser-color);\\r\\n}\\r\\n\\r\\n.submarine {\\r\\n  background-color: var(--submarine-color);\\r\\n}\\r\\n\\r\\n.destroyer {\\r\\n  background-color: var(--destroyer-color);\\r\\n}\\r\\n\\r\\n.is-placed {\\r\\n  background-color: var(--is-placed-color);\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\n.miss {\\r\\n  background-color: var(--miss-color);\\r\\n}\\r\\n\\r\\n.hit {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  font-size: clamp(1rem, 2vw, 2rem);\\r\\n}\\r\\n\\r\\n.sunk {\\r\\n  filter: brightness(0.75);\\r\\n}\\r\\n\\r\\n/* Loading screen */\\r\\n.loading-screen[open] {\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n  max-width: none;\\r\\n  max-height: none;\\r\\n  border: none;\\r\\n  background-color: var(--background-color);\\r\\n  color: var(--main-font-color);\\r\\n}\\r\\n\\r\\n.loading-screen-content {\\r\\n  max-width: 1400px;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n  margin: 0 auto;\\r\\n  padding: 2.5% 5%;\\r\\n}\\r\\n\\r\\n.loading-screen-content h1 {\\r\\n  font-family: var(--main-font);\\r\\n  font-weight: var(--header-font-weight);\\r\\n  font-size: var(--header-font-size);\\r\\n}\\r\\n\\r\\n.loading-screen-message {\\r\\n  font-family: var(--secondary-font);\\r\\n  font-size: 2rem;\\r\\n  margin: 5rem 0 2rem 0;\\r\\n}\\r\\n\\r\\n.loading-screen button {\\r\\n  display: none;\\r\\n  border: none;\\r\\n  margin: 2rem 0;\\r\\n  height: 3rem;\\r\\n  width: 20%;\\r\\n  font-family: var(--secondary-font);\\r\\n  font-size: 1.5rem;\\r\\n  background-color: var(--button-color);\\r\\n  color: var(--secondary-font-color);\\r\\n  transition: transform 100ms;\\r\\n}\\r\\n\\r\\n.loading-screen button:hover {\\r\\n  transform: scale(1.1);\\r\\n}\\r\\n\\r\\n.loader-message {\\r\\n  font-family: var(--secondary-font);\\r\\n  font-size: 1.5rem;\\r\\n  margin-bottom: 1rem;\\r\\n}\\r\\n\\r\\n.loader-animation {\\r\\n  width: 60px;\\r\\n  margin: auto;\\r\\n  aspect-ratio: 4;\\r\\n  background: radial-gradient(circle closest-side, #fdfaf6 90%, #0000) 0 /\\r\\n    calc(100% / 3) 100% space;\\r\\n  clip-path: inset(0 100% 0 0);\\r\\n  animation: l1 1s steps(4) infinite;\\r\\n}\\r\\n\\r\\n@keyframes l1 {\\r\\n  to {\\r\\n    clip-path: inset(0 -34% 0 0);\\r\\n  }\\r\\n}\\r\\n\\r\\n@media (max-width: 767px), (orientation: portrait) {\\r\\n  :root {\\r\\n    --header-font-size: 3rem;\\r\\n  }\\r\\n\\r\\n  main {\\r\\n    display: grid;\\r\\n    grid-template-columns: 1fr;\\r\\n    grid-template-rows: repeat(4, auto);\\r\\n    gap: 1rem;\\r\\n  }\\r\\n\\r\\n  header {\\r\\n    grid-column: auto;\\r\\n  }\\r\\n\\r\\n  .stats-container {\\r\\n    grid-row: 4;\\r\\n    width: 100%;\\r\\n    min-width: none;\\r\\n    padding-right: 0;\\r\\n    grid-template-columns: 1.1fr 0.9fr;\\r\\n    gap: 1rem;\\r\\n  }\\r\\n\\r\\n  .player1-stats,\\r\\n  .player2-stats {\\r\\n    width: 100%;\\r\\n    padding: 0.5rem;\\r\\n  }\\r\\n\\r\\n  .remaining-ships-container {\\r\\n    gap: 0.5rem;\\r\\n  }\\r\\n\\r\\n  .remaining-ships-container div {\\r\\n    aspect-ratio: 1 / 0.5;\\r\\n    font-size: 0.5rem;\\r\\n  }\\r\\n\\r\\n  .gameboard-container,\\r\\n  .ship-placement-container {\\r\\n    padding: 1rem 0 calc(1rem + 1vh + 4vw) 0; /* Prevent gameboard grid overflow*/\\r\\n    width: 100%;\\r\\n    min-width: 50px;\\r\\n    max-width: none;\\r\\n  }\\r\\n\\r\\n  .gameboard-container {\\r\\n    grid-row: 3;\\r\\n  }\\r\\n\\r\\n  .your-board-preview {\\r\\n    padding-top: 0;\\r\\n  }\\r\\n\\r\\n  .your-board-preview p {\\r\\n    display: none;\\r\\n  }\\r\\n\\r\\n  .your-board {\\r\\n    margin-top: 0;\\r\\n  }\\r\\n\\r\\n  .game-stats-container {\\r\\n    grid-row: 2;\\r\\n    grid-template-columns: 1.25fr 0.75fr;\\r\\n    grid-template-rows: auto auto 0px;\\r\\n    grid-template-areas:\\r\\n      'player end-turn'\\r\\n      'message message';\\r\\n    align-items: center;\\r\\n    margin-right: 0;\\r\\n    padding-top: 0;\\r\\n    padding-left: 0;\\r\\n    width: 100%;\\r\\n    min-width: none;\\r\\n  }\\r\\n\\r\\n  .turn-display {\\r\\n    grid-area: player;\\r\\n    text-align: left;\\r\\n    font-size: 1.25rem;\\r\\n  }\\r\\n\\r\\n  .turn-display span::after {\\r\\n    content: ' ';\\r\\n  }\\r\\n\\r\\n  .turn-display br {\\r\\n    display: none;\\r\\n  }\\r\\n\\r\\n  .end-turn-btn {\\r\\n    grid-area: end-turn;\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .end-turn-btn button {\\r\\n    margin: 0;\\r\\n    font-size: 1rem;\\r\\n  }\\r\\n\\r\\n  .game-message-display {\\r\\n    grid-area: message;\\r\\n    justify-self: bottom;\\r\\n    margin-bottom: 0;\\r\\n    margin-top: 0.5rem;\\r\\n    height: 1rem;\\r\\n  }\\r\\n\\r\\n  .winner-display {\\r\\n    position: absolute;\\r\\n    left: 50%;\\r\\n    top: 45%;\\r\\n    transform: translate(-50%, -50%);\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    background-color: var(--background-color);\\r\\n    width: 80%;\\r\\n    padding: 1rem;\\r\\n  }\\r\\n\\r\\n  .play-again-btn {\\r\\n    align-self: center;\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .play-again-btn button {\\r\\n    margin-bottom: 0;\\r\\n  }\\r\\n\\r\\n  .start-screen-content h1 {\\r\\n    font-size: var(--header-font-size);\\r\\n  }\\r\\n\\r\\n  .game-setup-container {\\r\\n    grid-template-columns: 1fr;\\r\\n    grid-template-rows: repeat(3, auto);\\r\\n    justify-items: center;\\r\\n    gap: 1rem;\\r\\n  }\\r\\n\\r\\n  .start-new-game,\\r\\n  .vs-player,\\r\\n  .vs-computer {\\r\\n    font-size: 1.75rem;\\r\\n  }\\r\\n\\r\\n  .start-new-game,\\r\\n  .game-modes-container {\\r\\n    grid-column-start: 1;\\r\\n  }\\r\\n\\r\\n  .game-modes-container {\\r\\n    width: 80%;\\r\\n  }\\r\\n\\r\\n  .ship-setup-container {\\r\\n    grid-row: 2;\\r\\n    padding-right: 0;\\r\\n    min-width: none;\\r\\n    gap: 0;\\r\\n  }\\r\\n\\r\\n  .ship-setup-label {\\r\\n    display: none;\\r\\n  }\\r\\n\\r\\n  .ship-placement-container::before {\\r\\n    content: 'Position your ships!';\\r\\n    display: block;\\r\\n    font-family: var(--main-font);\\r\\n    color: var(--main-font-color);\\r\\n    font-size: 1.75rem;\\r\\n    text-align: center;\\r\\n  }\\r\\n\\r\\n  .ship-placement-board {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .ships-container {\\r\\n    grid-template-columns: auto auto;\\r\\n    margin: auto;\\r\\n  }\\r\\n\\r\\n  .ship {\\r\\n    padding: 0.5rem;\\r\\n    grid-template-columns: 1fr auto;\\r\\n    grid-template-rows: repeat(3, auto);\\r\\n    gap: 0.25rem;\\r\\n  }\\r\\n\\r\\n  .ship:first-of-type {\\r\\n    grid-column: span 2;\\r\\n  }\\r\\n\\r\\n  .ship-name {\\r\\n    font-size: 1rem;\\r\\n    font-weight: var(--header-font-weight);\\r\\n    line-height: 1rem;\\r\\n  }\\r\\n\\r\\n  .ship-health {\\r\\n    line-height: 1rem;\\r\\n    grid-row: 2;\\r\\n  }\\r\\n\\r\\n  .ship-btns {\\r\\n    flex-direction: column;\\r\\n    grid-row: 1;\\r\\n    grid-row: span 3;\\r\\n  }\\r\\n\\r\\n  .change-orientation-btn,\\r\\n  .undo-btn {\\r\\n    width: 3rem;\\r\\n    height: 100%;\\r\\n  }\\r\\n\\r\\n  .ship-model {\\r\\n    grid-column: auto;\\r\\n    width: 100% !important;\\r\\n  }\\r\\n\\r\\n  .name-start-container {\\r\\n    min-width: none;\\r\\n  }\\r\\n\\r\\n  .input-name-label {\\r\\n    margin-top: 0;\\r\\n  }\\r\\n\\r\\n  .name-start-container input {\\r\\n    font-size: 2rem;\\r\\n    margin-top: 0.5rem;\\r\\n  }\\r\\n\\r\\n  .action-btn-container {\\r\\n    margin-top: 2rem;\\r\\n  }\\r\\n\\r\\n  .error-msg {\\r\\n    margin-bottom: 2rem;\\r\\n  }\\r\\n\\r\\n  .loading-screen-message {\\r\\n    text-align: center;\\r\\n  }\\r\\n\\r\\n  .loading-screen button {\\r\\n    width: 80%;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) and (max-width: 1200px) and (orientation: landscape) {\\r\\n  .start-screen-content h1 {\\r\\n    font-size: 8rem;\\r\\n  }\\r\\n\\r\\n  .vs-player,\\r\\n  .vs-computer {\\r\\n    margin-top: calc(2rem + 3vh);\\r\\n  }\\r\\n\\r\\n  .ship-setup-container,\\r\\n  .name-start-container {\\r\\n    min-width: 200px;\\r\\n  }\\r\\n\\r\\n  .ship-setup-container {\\r\\n    padding-right: 0;\\r\\n  }\\r\\n\\r\\n  .name-start-container {\\r\\n    padding: 0;\\r\\n  }\\r\\n\\r\\n  .ship-setup-label,\\r\\n  .input-name-label {\\r\\n    font-size: 1.25rem;\\r\\n  }\\r\\n\\r\\n  .ship {\\r\\n    padding: 0.5rem;\\r\\n    grid-template-columns: 1fr auto;\\r\\n    gap: 0.25rem;\\r\\n  }\\r\\n\\r\\n  .ship-name {\\r\\n    font-weight: var(--header-font-weight);\\r\\n    font-size: 1rem;\\r\\n  }\\r\\n\\r\\n  .ship-health {\\r\\n    margin-right: 0.25rem;\\r\\n  }\\r\\n\\r\\n  .ship-model {\\r\\n    height: 2rem;\\r\\n  }\\r\\n\\r\\n  .gameboard-container,\\r\\n  .ship-placement-container {\\r\\n    min-width: 300px;\\r\\n  }\\r\\n\\r\\n  .stats-container,\\r\\n  .game-stats-container {\\r\\n    min-width: 200px;\\r\\n    padding: 0;\\r\\n  }\\r\\n\\r\\n  .stats-container {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .action-btn {\\r\\n    font-size: 1.5rem;\\r\\n  }\\r\\n\\r\\n  .player1 span,\\r\\n  .player2 span {\\r\\n    font-size: 1.1rem;\\r\\n  }\\r\\n\\r\\n  .remaining-ships-container div {\\r\\n    aspect-ratio: 1 / 1;\\r\\n  }\\r\\n\\r\\n  .your-board-preview {\\r\\n    padding: 1rem;\\r\\n  }\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n  url = String(url.__esModule ? url.default : url);\n\n  // If url is already wrapped in quotes, remove them\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n  if (options.hash) {\n    url += options.hash;\n  }\n\n  // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n  return url;\n};","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t23: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","__webpack_require__.nc = undefined;","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./main.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./main.css\";\n       export default content && content.locals ? content.locals : undefined;\n","const header = document.querySelector('.header');\r\n\r\nconst startScreen = {\r\n  dialog: document.querySelector('.start-screen'),\r\n  title: document.querySelector('.start-screen-content h1'),\r\n  startBtn: document.querySelector('.start-new-game'),\r\n  setupContainer: document.querySelector('.game-setup-container'),\r\n};\r\n\r\nconst loadingScreen = {\r\n  dialog: document.querySelector('.loading-screen'),\r\n  message: document.querySelector('.loading-screen-content p'),\r\n  loader: document.querySelector('.loader'),\r\n  readyBtn: document.querySelector('.loading-screen-content button'),\r\n};\r\n\r\nconst gameboardUI = {\r\n  board: document.querySelector('.gameboard'),\r\n  yourBoard: document.querySelector('.your-board'),\r\n};\r\n\r\nconst playerStatsUI = {\r\n  p1Stats: document.querySelector('.player1-stats'),\r\n  p1Name: document.querySelector('.player1 span'),\r\n  p1Health: document.querySelector('.player1 .actual-hp'),\r\n  p1Ships: document.querySelector('.player1 .ships-remaining'),\r\n  p2Stats: document.querySelector('.player2-stats'),\r\n  p2Name: document.querySelector('.player2 span'),\r\n  p2Health: document.querySelector('.player2 .actual-hp'),\r\n  p2Ships: document.querySelector('.player2 .ships-remaining'),\r\n};\r\n\r\nconst gameStatusUI = {\r\n  turnDisplay: document.querySelector('.turn-display span'),\r\n  messageDisplay: document.querySelector('.game-message-display'),\r\n};\r\n\r\nconst controlsUI = {\r\n  endTurn: document.querySelector('.end-turn-btn button'),\r\n  playAgainContainer: document.querySelector('.play-again-btn'),\r\n  playAgain: document.querySelector('.play-again-btn button'),\r\n};\r\n\r\nconst gameSummary = {\r\n  container: document.querySelector('.winner-display'),\r\n  winner: document.querySelector('.winner-display p:first-of-type'),\r\n  summary: document.querySelector('.game-summary'),\r\n};\r\n\r\nexport {\r\n  header,\r\n  startScreen,\r\n  loadingScreen,\r\n  gameboardUI,\r\n  playerStatsUI,\r\n  gameStatusUI,\r\n  controlsUI,\r\n  gameSummary,\r\n};\r\n","class Ship {\r\n  constructor(name, length) {\r\n    this.name = name;\r\n    this.length = length;\r\n    this.hitCount = 0;\r\n    this.hasSunk = false;\r\n    this.position = [];\r\n  }\r\n\r\n  // Calculates whether the ship should be considered sunk\r\n  #isSunk() {\r\n    if (this.length === this.hitCount) return true;\r\n    return false;\r\n  }\r\n\r\n  // Increases hitCount\r\n  hit() {\r\n    if (this.hasSunk) return;\r\n    this.hitCount += 1;\r\n    if (this.hitCount === this.length) this.hasSunk = this.#isSunk();\r\n  }\r\n\r\n  // Returns an object with the ship's status\r\n  getShip() {\r\n    return {\r\n      length: this.length,\r\n      hitCount: this.hitCount,\r\n      hasSunk: this.hasSunk,\r\n    };\r\n  }\r\n}\r\n\r\nexport default Ship;\r\n","const GAME_MODES = {\r\n  VS_PLAYER: 'vsPlayer',\r\n  VS_COMPUTER: 'vsComputer',\r\n};\r\n\r\nconst NEXT_PLAYER = 'nextPlayer';\r\n\r\nconst COMPUTER_PLAYER = 'Computer';\r\n\r\nconst CELL_STATES = {\r\n  HIT: 'hit',\r\n  MISS: 'miss',\r\n  SUNK: 'sunk',\r\n  HAS_SHIP: 'has-ship',\r\n};\r\n\r\nconst ORIENTATIONS = {\r\n  HORIZONTAL: 'horizontal',\r\n  VERTICAL: 'vertical',\r\n};\r\n\r\nconst SHIP_OFFSETS = [\r\n  [-1, 0],\r\n  [1, 0],\r\n  [0, -1],\r\n  [0, 1],\r\n  [-1, -1],\r\n  [-1, 1],\r\n  [1, -1],\r\n  [1, 1],\r\n];\r\n\r\nexport {\r\n  GAME_MODES,\r\n  NEXT_PLAYER,\r\n  COMPUTER_PLAYER,\r\n  CELL_STATES,\r\n  ORIENTATIONS,\r\n  SHIP_OFFSETS,\r\n};\r\n","import initializeShips from './shipsConfig';\r\nimport { CELL_STATES, ORIENTATIONS } from './constants';\r\n\r\nclass Gameboard {\r\n  constructor() {\r\n    this.board = new Array(10).fill(null).map(() => new Array(10).fill(null));\r\n    this.ships = initializeShips();\r\n    this.occupied = new Set();\r\n    this.hit = new Set();\r\n    this.miss = new Set();\r\n  }\r\n\r\n  // Places specified ships on the board\r\n  placeShip(ship, start, orientation) {\r\n    const [row, col] = start;\r\n\r\n    if (\r\n      (orientation === ORIENTATIONS.VERTICAL &&\r\n        row + ship.length > this.board.length) ||\r\n      (orientation === ORIENTATIONS.HORIZONTAL &&\r\n        col + ship.length > this.board[0].length)\r\n    )\r\n      return { success: false, message: 'Out of bounds' };\r\n\r\n    for (let i = 0; i < ship.length; i += 1) {\r\n      const currentRow = row + (orientation === ORIENTATIONS.VERTICAL ? i : 0);\r\n      const currentCol =\r\n        col + (orientation === ORIENTATIONS.HORIZONTAL ? i : 0);\r\n      const cell = `${currentRow},${currentCol}`;\r\n\r\n      if (this.occupied.has(cell))\r\n        return {\r\n          success: false,\r\n          message: 'Overlaps existing ship',\r\n        };\r\n    }\r\n\r\n    for (let i = 0; i < ship.length; i += 1) {\r\n      const currentRow = row + (orientation === ORIENTATIONS.VERTICAL ? i : 0);\r\n      const currentCol =\r\n        col + (orientation === ORIENTATIONS.HORIZONTAL ? i : 0);\r\n      this.occupied.add(`${currentRow},${currentCol}`);\r\n      ship.position.push([currentRow, currentCol]);\r\n      this.board[currentRow][currentCol] = ship;\r\n    }\r\n\r\n    return { success: true };\r\n  }\r\n\r\n  // Removes a ship from the board and can be placed again\r\n  removeShip(ship) {\r\n    ship.position.forEach((coord) => {\r\n      this.occupied.delete(coord.join(','));\r\n      this.board[coord[0]][coord[1]] = null;\r\n    });\r\n\r\n    ship.position.splice(0, ship.position.length);\r\n  }\r\n\r\n  // Updates board on successful and missed shots\r\n  receiveAttack(coords) {\r\n    const [row, col] = coords;\r\n\r\n    if (this.hit.has(`${row},${col}`) || this.miss.has(`${row},${col}`))\r\n      return { success: false, message: 'Cell has already been hit' };\r\n\r\n    if (this.board[row][col] && this.board[row][col] !== CELL_STATES.MISS) {\r\n      this.hit.add(`${row},${col}`);\r\n      this.board[row][col].hit(); // if ship is present, this will be an instance of Ship\r\n    } else {\r\n      this.miss.add(`${row},${col}`);\r\n      this.board[row][col] = CELL_STATES.MISS;\r\n    }\r\n\r\n    return { success: true };\r\n  }\r\n\r\n  // Checks if all available ships are placed on board\r\n  isAllPlaced() {\r\n    return Object.values(this.ships).every((ship) => ship.position.length > 0);\r\n  }\r\n\r\n  // Reports if all ships are sunk\r\n  isAllSunk() {\r\n    return Object.values(this.ships).every((ship) => ship.hasSunk);\r\n  }\r\n}\r\n\r\nexport default Gameboard;\r\n","import Ship from './ship';\r\n\r\nconst initializeShips = () => ({\r\n  carrier: new Ship('carrier', 5),\r\n  battleship: new Ship('battleship', 4),\r\n  cruiser: new Ship('cruiser', 3),\r\n  submarine: new Ship('submarine', 3),\r\n  destroyer: new Ship('destroyer', 2),\r\n});\r\n\r\nexport default initializeShips;\r\n","import Gameboard from './gameboard';\r\n\r\nclass Player {\r\n  constructor() {\r\n    this.gameboard = new Gameboard();\r\n    this.name = '';\r\n  }\r\n}\r\n\r\nexport default Player;\r\n","import Player from './player';\r\nimport { COMPUTER_PLAYER, ORIENTATIONS, SHIP_OFFSETS } from './constants';\r\n\r\nclass ComputerPlayer extends Player {\r\n  constructor() {\r\n    super();\r\n    this.name = COMPUTER_PLAYER;\r\n    this.restrictedCells = new Set();\r\n    this.lastHit = null; // stores last successful hit\r\n    this.nextHit = null; // stores successful hit adjacent to lastHit\r\n    this.followingHits = []; // stores cells hit (after 1st and 2nd) until ship sinks\r\n    this.directionHitCount = 0; // stores count until ship sinks or direction switches\r\n    this.isSwitched = false; // true if lastHit and nextHit has already been switched\r\n    this.targetQueue = []; // stores next target when ships detected are adjacent\r\n  }\r\n\r\n  // Automatically place all ships in the computer player's gameboard\r\n  autoPlaceShips() {\r\n    Object.values(this.gameboard.ships).forEach((ship) => {\r\n      const orientation =\r\n        Math.random() < 0.5 ? ORIENTATIONS.HORIZONTAL : ORIENTATIONS.VERTICAL;\r\n      this.gameboard.placeShip(\r\n        ship,\r\n        this.#autoPlacementCoord(ship.length, orientation),\r\n        orientation,\r\n      );\r\n      this.#blockPlacementZone(ship.position);\r\n    });\r\n  }\r\n\r\n  // Automatically attack opponent's gameboard\r\n  autoAttack(opponent) {\r\n    const [row, col] =\r\n      this.#autoAttackDirection(opponent) ||\r\n      this.#autoAttackAdjacent(opponent) ||\r\n      this.#autoAttackCoord(opponent);\r\n\r\n    opponent.receiveAttack([row, col]);\r\n\r\n    if (opponent.hit.has(`${row},${col}`)) {\r\n      if (this.lastHit && this.nextHit) {\r\n        this.followingHits.push([row, col]);\r\n        this.directionHitCount += 1;\r\n      } else if (this.lastHit && !this.nextHit) this.nextHit = [row, col];\r\n      else this.lastHit = [row, col];\r\n    }\r\n\r\n    if (opponent.board[row][col]?.hasSunk) {\r\n      this.#queueDeferredHits(opponent);\r\n      this.#resetTargeting();\r\n      if (this.targetQueue.length) {\r\n        this.#cleanTargetQueue(opponent);\r\n        this.lastHit = this.targetQueue.shift();\r\n      }\r\n    }\r\n\r\n    return [row, col];\r\n  }\r\n\r\n  // Creates random coordinates to be used for placing ships\r\n  #autoPlacementCoord(length, orientation) {\r\n    const rowSize = 10 - (orientation === ORIENTATIONS.VERTICAL ? length : 0);\r\n    const colSize = 10 - (orientation === ORIENTATIONS.HORIZONTAL ? length : 0);\r\n\r\n    const row = Math.floor(Math.random() * rowSize);\r\n    const col = Math.floor(Math.random() * colSize);\r\n\r\n    for (let i = 0; i < length; i += 1) {\r\n      if (\r\n        this.restrictedCells.has(\r\n          `${row + (orientation === ORIENTATIONS.VERTICAL ? i : 0)},${col + (orientation === ORIENTATIONS.HORIZONTAL ? i : 0)}`,\r\n        )\r\n      )\r\n        return this.#autoPlacementCoord(length, orientation);\r\n    }\r\n\r\n    return [row, col];\r\n  }\r\n\r\n  // Marks ship and surrounding cells as invalid for auto-placement\r\n  #blockPlacementZone(position) {\r\n    position.forEach(([row, col]) => {\r\n      this.restrictedCells.add(`${row},${col}`);\r\n\r\n      for (let i = 0; i < SHIP_OFFSETS.length; i += 1) {\r\n        const newRow = row + SHIP_OFFSETS[i][0];\r\n        const newCol = col + SHIP_OFFSETS[i][1];\r\n\r\n        if (newRow >= 0 && newRow < 10 && newCol >= 0 && newCol < 10) {\r\n          this.restrictedCells.add(`${newRow},${newCol}`);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // Generates a random coord for auto-attack\r\n  #autoAttackCoord(opponent) {\r\n    for (let attempts = 0; attempts <= 100; attempts += 1) {\r\n      const row = Math.floor(Math.random() * 10);\r\n      const col = Math.floor(Math.random() * 10);\r\n\r\n      const coord = `${row},${col}`;\r\n      const invalid = opponent.hit.has(coord) || opponent.miss.has(coord);\r\n      const unlikely = this.#isUnlikelyShipCell(row, col, opponent);\r\n\r\n      if (!invalid && !unlikely) return [row, col];\r\n    }\r\n\r\n    return this.#generateFallbackCoord(opponent);\r\n  }\r\n\r\n  // Generates adjacent cell coord when last attack is a hit\r\n  #autoAttackAdjacent(opponent) {\r\n    if (!this.lastHit) return null;\r\n\r\n    const [row, col] = this.lastHit;\r\n\r\n    const directions = [\r\n      [1, 0],\r\n      [-1, 0],\r\n      [0, 1],\r\n      [0, -1],\r\n    ];\r\n\r\n    const validDirections = directions.filter(([dirRow, dirCol]) => {\r\n      const r = row + dirRow;\r\n      const c = col + dirCol;\r\n\r\n      return (\r\n        r < opponent.board.length &&\r\n        r >= 0 &&\r\n        c < opponent.board[0].length &&\r\n        c >= 0 &&\r\n        !opponent.hit.has(`${r},${c}`) &&\r\n        !opponent.miss.has(`${r},${c}`) &&\r\n        !this.#isUnlikelyShipCell(row, col, opponent, true)\r\n      );\r\n    });\r\n\r\n    if (validDirections.length === 0) return null;\r\n\r\n    const [dirRow, dirCol] =\r\n      validDirections[Math.floor(Math.random() * validDirections.length)];\r\n\r\n    return [row + dirRow, col + dirCol];\r\n  }\r\n\r\n  // Continues directionality of consecutive successful hits\r\n  #autoAttackDirection(opponent) {\r\n    if (!this.nextHit) return null;\r\n\r\n    const [row, col] = this.lastHit;\r\n    const [nextRow, nextCol] = this.nextHit;\r\n\r\n    const direction = row === nextRow ? 'row' : 'col';\r\n\r\n    const nextTarget =\r\n      direction === 'row'\r\n        ? [\r\n            row,\r\n            nextCol > col\r\n              ? nextCol + (1 + this.directionHitCount)\r\n              : nextCol - (1 + this.directionHitCount),\r\n          ]\r\n        : [\r\n            nextRow > row\r\n              ? nextRow + (1 + this.directionHitCount)\r\n              : nextRow - (1 + this.directionHitCount),\r\n            col,\r\n          ];\r\n\r\n    if (\r\n      opponent.hit.has(`${nextTarget[0]},${nextTarget[1]}`) &&\r\n      !opponent.board[nextTarget[0]][nextTarget[1]]?.hasSunk\r\n    ) {\r\n      this.directionHitCount += 1;\r\n      return this.#autoAttackDirection(opponent);\r\n    }\r\n\r\n    if (\r\n      nextTarget[0] < 0 ||\r\n      nextTarget[0] === opponent.board.length ||\r\n      nextTarget[1] < 0 ||\r\n      nextTarget[1] === opponent.board[0].length ||\r\n      opponent.miss.has(`${nextTarget[0]},${nextTarget[1]}`) ||\r\n      (opponent.hit.has(`${nextTarget[0]},${nextTarget[1]}`) &&\r\n        opponent.board[nextTarget[0]][nextTarget[1]]?.hasSunk)\r\n    ) {\r\n      this.directionHitCount = 0;\r\n      if (this.isSwitched) {\r\n        this.#queueAdjacentShips();\r\n        return null;\r\n      }\r\n\r\n      [this.lastHit, this.nextHit] = [this.nextHit, this.lastHit];\r\n      this.isSwitched = true;\r\n      return this.#autoAttackDirection(opponent);\r\n    }\r\n\r\n    return nextTarget;\r\n  }\r\n\r\n  // Fallback when random coord generation fails to provide a valid coord\r\n  #generateFallbackCoord(opponent) {\r\n    let validCoord; // stores last valid cell found even if it's unlikely\r\n\r\n    for (let row = 0; row < opponent.board.length; row += 1) {\r\n      for (let col = 0; col < opponent.board[0].length; col += 1) {\r\n        if (\r\n          !opponent.board[row][col]?.hasSunk &&\r\n          !opponent.miss.has(`${row},${col}`) &&\r\n          !this.#isUnlikelyShipCell(row, col, opponent)\r\n        )\r\n          return [row, col];\r\n        if (\r\n          !opponent.board[row][col]?.hasSunk &&\r\n          !opponent.miss.has(`${row},${col}`)\r\n        )\r\n          validCoord = [row, col];\r\n      }\r\n    }\r\n\r\n    return validCoord;\r\n  }\r\n\r\n  // Add hit cells that are part of different ships to be targeted next\r\n  #queueAdjacentShips() {\r\n    this.isSwitched = false;\r\n    this.targetQueue.push(this.lastHit);\r\n    this.followingHits.forEach((cell) => this.targetQueue.push(cell));\r\n\r\n    this.lastHit = this.nextHit;\r\n    this.nextHit = null;\r\n    this.followingHits = [];\r\n  }\r\n\r\n  // When 2 adjacent ships are hit while trying to sink one, queue the other one\r\n  #queueDeferredHits(opponent) {\r\n    const deferredHits = [];\r\n\r\n    deferredHits.push(this.lastHit, this.nextHit, ...this.followingHits);\r\n\r\n    deferredHits.forEach(([row, col]) => {\r\n      if (!opponent.board[row][col]?.hasSunk) this.targetQueue.push([row, col]);\r\n    });\r\n  }\r\n\r\n  // Checks if a target cell can still contain the shortest remaining ship\r\n  // eslint-disable-next-line class-methods-use-this\r\n  #isUnlikelyShipCell(row, col, opponent, isAdjacent = false) {\r\n    const shortestLength = Math.min(\r\n      ...Object.values(opponent.ships)\r\n        .filter((ship) => !ship.hasSunk)\r\n        .map((ship) => ship.length),\r\n    );\r\n\r\n    const isEarlyGame = isAdjacent\r\n      ? false\r\n      : opponent.board.flat().filter((cell) => !cell).length > 30;\r\n\r\n    let availableRow = isEarlyGame ? 0 : 1;\r\n    let availableCol = isEarlyGame ? 0 : 1;\r\n\r\n    let isLeftBlocked = false;\r\n    let isRightBlocked = false;\r\n    let isUpBlocked = false;\r\n    let isDownBlocked = false;\r\n\r\n    for (let i = 1; i !== shortestLength; i += 1) {\r\n      if (!isRightBlocked) {\r\n        if (\r\n          col + i < opponent.board[0].length &&\r\n          !opponent.miss.has(`${row},${col + i}`) &&\r\n          !opponent.board[row][col + i]?.hasSunk\r\n        )\r\n          availableRow += 1;\r\n        else isRightBlocked = true;\r\n      }\r\n\r\n      if (!isLeftBlocked) {\r\n        if (\r\n          col - i >= 0 &&\r\n          !opponent.miss.has(`${row},${col - i}`) &&\r\n          !opponent.board[row][col - i]?.hasSunk\r\n        )\r\n          availableRow += 1;\r\n        else isLeftBlocked = true;\r\n      }\r\n\r\n      if (!isUpBlocked) {\r\n        if (\r\n          row + i < opponent.board.length &&\r\n          !opponent.miss.has(`${row + i},${col}`) &&\r\n          !opponent.board[row + i][col]?.hasSunk\r\n        )\r\n          availableCol += 1;\r\n        else isUpBlocked = true;\r\n      }\r\n\r\n      if (!isDownBlocked) {\r\n        if (\r\n          row - i >= 0 &&\r\n          !opponent.miss.has(`${row - i},${col}`) &&\r\n          !opponent.board[row - i][col]?.hasSunk\r\n        )\r\n          availableCol += 1;\r\n        else isDownBlocked = true;\r\n      }\r\n\r\n      if (\r\n        (isLeftBlocked && isRightBlocked && isUpBlocked && isDownBlocked) ||\r\n        availableRow >= shortestLength ||\r\n        availableCol >= shortestLength\r\n      )\r\n        break;\r\n    }\r\n\r\n    return availableRow < shortestLength && availableCol < shortestLength;\r\n  }\r\n\r\n  // Removes targetQueue entries that are part of sunken ships\r\n  #cleanTargetQueue(opponent) {\r\n    this.targetQueue = this.targetQueue.filter(\r\n      ([row, col]) => !opponent.board[row][col]?.hasSunk,\r\n    );\r\n  }\r\n\r\n  #resetTargeting() {\r\n    this.lastHit = null;\r\n    this.nextHit = null;\r\n    this.followingHits = [];\r\n    this.isSwitched = false;\r\n    this.directionHitCount = 0;\r\n  }\r\n}\r\n\r\nexport default ComputerPlayer;\r\n","import ComputerPlayer from './computerPlayer';\r\nimport { GAME_MODES } from './constants';\r\nimport Player from './player';\r\n\r\nconst players = {\r\n  player1: null,\r\n  player2: null,\r\n};\r\n\r\nconst initializePlayers = (mode) => {\r\n  if (!players.player1 || !players.player2) {\r\n    players.player1 = new Player();\r\n    players.player2 =\r\n      mode === GAME_MODES.VS_COMPUTER ? new ComputerPlayer() : new Player();\r\n  }\r\n};\r\n\r\nconst resetPlayers = () => {\r\n  players.player1 = null;\r\n  players.player2 = null;\r\n};\r\n\r\nexport { players, initializePlayers, resetPlayers };\r\n","import { players } from './createPlayers';\r\n\r\n// Assigns and stores active player and ability to switch to another player\r\nconst activePlayer = {\r\n  player: null,\r\n  gameboard: null,\r\n  opponent: null,\r\n  oppGameboard: null,\r\n  assign() {\r\n    this.player = players.player1;\r\n    this.gameboard = this.player.gameboard;\r\n    this.opponent = players.player2;\r\n    this.oppGameboard = this.opponent.gameboard;\r\n  },\r\n  switch() {\r\n    [this.player, this.opponent] = [this.opponent, this.player];\r\n    this.gameboard = this.player.gameboard;\r\n    this.oppGameboard = this.opponent.gameboard;\r\n  },\r\n  reset() {\r\n    this.player = null;\r\n    this.gameboard = null;\r\n    this.opponent = null;\r\n    this.oppGameboard = null;\r\n  },\r\n};\r\n\r\nexport default activePlayer;\r\n","import { loadingScreen } from './selectors';\r\n\r\n// Display button for resuming the game\r\nconst displayReadyBtn = () => {\r\n  loadingScreen.loader.style.display = 'none';\r\n  loadingScreen.readyBtn.style.display = 'block';\r\n};\r\n\r\n// Opens loading screen modal to emulate loading and avoid screen peeking\r\nconst renderLoadingScreen = () => {\r\n  loadingScreen.dialog.showModal();\r\n\r\n  setTimeout(displayReadyBtn, 1500);\r\n};\r\n\r\n// Closes loading screen dialog and resets its values\r\nconst hideLoadingScreen = () => {\r\n  loadingScreen.loader.style.display = '';\r\n  loadingScreen.readyBtn.style.display = '';\r\n  loadingScreen.dialog.close();\r\n};\r\n\r\nloadingScreen.readyBtn.addEventListener('click', hideLoadingScreen);\r\n\r\nexport default renderLoadingScreen;\r\n","// Helper function for creating elements\r\nconst createElement = (type, classList = []) => {\r\n  const element = document.createElement(type);\r\n\r\n  if (classList.length !== 0) element.classList.add(...classList);\r\n\r\n  return element;\r\n};\r\n\r\nexport default createElement;\r\n","import activePlayer from './activePlayer';\r\nimport { CELL_STATES, COMPUTER_PLAYER } from './constants';\r\nimport createElement from './helpers';\r\nimport { controlsUI } from './selectors';\r\n\r\n// Renders 10 x 10 gameboard\r\nconst renderGameboard = (boardContainer, playerBoard) => {\r\n  if (activePlayer.player.name === COMPUTER_PLAYER)\r\n    boardContainer.classList.add('disable-gameboard');\r\n  else boardContainer.classList.remove('disable-gameboard');\r\n\r\n  playerBoard.board.forEach((row, rowIndex) => {\r\n    row.forEach((col, colIndex) => {\r\n      const cell = createElement('div', ['cell']);\r\n\r\n      cell.dataset.row = rowIndex;\r\n      cell.dataset.col = colIndex;\r\n\r\n      boardContainer.appendChild(cell);\r\n\r\n      if (col === CELL_STATES.MISS) cell.classList.add(CELL_STATES.MISS);\r\n\r\n      if (col?.hasSunk)\r\n        cell.classList.add(CELL_STATES.SUNK, CELL_STATES.HAS_SHIP, col.name);\r\n\r\n      if (playerBoard.hit.has(`${rowIndex},${colIndex}`)) {\r\n        cell.textContent = '💥';\r\n        cell.classList.add(CELL_STATES.HIT);\r\n      }\r\n\r\n      if (playerBoard.board === activePlayer.gameboard.board)\r\n        if (col && col !== CELL_STATES.MISS)\r\n          cell.classList.add(CELL_STATES.HAS_SHIP, `${col.name}`);\r\n    });\r\n  });\r\n};\r\n\r\n// Updates gameboard when an action is done\r\nconst updateGameboard = (boardUI, row, col, state, ship = null) => {\r\n  const cell = boardUI.querySelector(`[data-row=\"${row}\"][data-col=\"${col}\"]`);\r\n  cell.classList.add(state);\r\n\r\n  if (state === CELL_STATES.HIT) cell.textContent = '💥';\r\n  if (state === CELL_STATES.SUNK)\r\n    cell.classList.add(CELL_STATES.HAS_SHIP, ship);\r\n};\r\n\r\n// Reveals sunk ship in the gameboard\r\nconst renderSunkShip = (boardUI, ship) => {\r\n  ship.position.forEach((pos) => {\r\n    const [row, col] = pos;\r\n    updateGameboard(boardUI, row, col, CELL_STATES.SUNK, ship.name);\r\n  });\r\n};\r\n\r\n// Shows error message on UI\r\nconst renderErrorMsg = (container, message) => {\r\n  if (container.firstChild) container.removeChild(container.firstChild);\r\n\r\n  const errorMsg = createElement('p', ['error-msg']);\r\n  errorMsg.textContent = message;\r\n\r\n  container.appendChild(errorMsg);\r\n};\r\n\r\n// Changes the text of the End Turn btn when it is the Computer's turn\r\nconst toggleEndTurnBtnText = () => {\r\n  if (\r\n    activePlayer.player.name !== COMPUTER_PLAYER &&\r\n    activePlayer.opponent.name !== COMPUTER_PLAYER\r\n  )\r\n    return;\r\n\r\n  controlsUI.endTurn.textContent =\r\n    controlsUI.endTurn.textContent === 'End Turn'\r\n      ? 'End Computer Turn'\r\n      : 'End Turn';\r\n};\r\n\r\n// Toggles 'Play Again' button for resetting the game\r\nconst togglePlayAgainBtn = () => {\r\n  controlsUI.playAgainContainer.style.visibility =\r\n    controlsUI.playAgainContainer.style.visibility === 'visible'\r\n      ? 'hidden'\r\n      : 'visible';\r\n};\r\n\r\nexport {\r\n  renderGameboard,\r\n  updateGameboard,\r\n  renderSunkShip,\r\n  renderErrorMsg,\r\n  toggleEndTurnBtnText,\r\n  togglePlayAgainBtn,\r\n};\r\n","import activePlayer from './activePlayer';\r\nimport { COMPUTER_PLAYER } from './constants';\r\nimport { playerStatsUI, gameStatusUI, gameSummary } from './selectors';\r\n\r\n// Updates both players' status display name\r\nconst updatePlayerStatusName = (player1Name, player2Name) => {\r\n  playerStatsUI.p1Name.textContent = player1Name;\r\n  playerStatsUI.p2Name.textContent = player2Name;\r\n};\r\n\r\n// Updates a player's displayed HP\r\nconst updateHP = (playerName) => {\r\n  const totalHP = Object.values(activePlayer.gameboard.ships).reduce(\r\n    (total, ship) => total + ship.length,\r\n    0,\r\n  );\r\n\r\n  const damage = +(1 / totalHP).toFixed(3) * 100;\r\n\r\n  const playerHealth =\r\n    playerName === playerStatsUI.p1Name.textContent\r\n      ? playerStatsUI.p1Health\r\n      : playerStatsUI.p2Health;\r\n\r\n  const currentHP = parseFloat(playerHealth.dataset.hp);\r\n  const newHP = Math.floor(Math.max(0, currentHP - damage));\r\n\r\n  playerHealth.dataset.hp = newHP;\r\n  playerHealth.style.width = `${newHP}%`;\r\n  if (newHP < 40) playerHealth.style.backgroundColor = 'orange';\r\n  if (newHP < 15) playerHealth.style.backgroundColor = 'red';\r\n};\r\n\r\n// Marks sunk ship from the player status' ships list\r\nconst updateShipsStatus = (playerName, ship) => {\r\n  const player =\r\n    playerName === playerStatsUI.p1Name.textContent\r\n      ? playerStatsUI.p1Ships\r\n      : playerStatsUI.p2Ships;\r\n\r\n  const sunkShip = player.querySelector(`.${ship.name}`);\r\n\r\n  sunkShip.textContent = '❌';\r\n  sunkShip.style.filter = 'brightness(0.5)';\r\n};\r\n\r\n// Shows which player is currently active\r\nconst turnIndicator = (player) => {\r\n  gameStatusUI.turnDisplay.textContent = `${player}'s`;\r\n};\r\n\r\n// Displays status messages -- errors, hits, misses, etc.\r\nconst renderGameMessage = (type) => {\r\n  const gameMessage = {\r\n    miss: () =>\r\n      activePlayer.player?.name === COMPUTER_PLAYER\r\n        ? 'Computer missed!'\r\n        : 'You missed!',\r\n    hit: () =>\r\n      activePlayer.player?.name === COMPUTER_PLAYER\r\n        ? 'Your ship got hit!'\r\n        : `${activePlayer.opponent?.name}'s ship got hit!`,\r\n    sunk: () =>\r\n      activePlayer.player?.name === COMPUTER_PLAYER\r\n        ? 'Your ship has been sunk!'\r\n        : `${activePlayer.opponent?.name}'s ship has been sunk!`,\r\n    invalid: () => 'Cell has already been targeted!',\r\n    blocked: () =>\r\n      activePlayer.player?.name === COMPUTER_PLAYER\r\n        ? \"Computer hasn't made a move yet!\"\r\n        : \"You haven't made a move yet!\",\r\n    clear: () => '',\r\n  };\r\n\r\n  gameStatusUI.messageDisplay.textContent = gameMessage[type]();\r\n};\r\n\r\n// Initialize information shown on screen\r\nconst initializeGameStatusUI = (player) => {\r\n  turnIndicator(player);\r\n};\r\n\r\n// Displays the winner and some gameplay stats\r\nconst displayWinner = (summary) => {\r\n  const { shipsSunk, turnsTaken, shipsLost, misses, accuracy } = summary;\r\n\r\n  gameSummary.container.style.visibility = 'visible';\r\n\r\n  gameSummary.winner.textContent = `${activePlayer.player.name} Wins!`;\r\n\r\n  gameSummary.summary.innerHTML = ` \r\n    <ul>\r\n      <li>Enemy Ships Sunk: <span>${shipsSunk}</span></li>\r\n      <li>Ships Lost: <span>${shipsLost}</span></li>\r\n      <li>Total Turns Taken: <span>${turnsTaken}</span></li>\r\n      <li>Misses: <span>${misses}</span></li>\r\n      <li>Accuracy: <span>${accuracy}%</span></li>\r\n    </ul>\r\n  `;\r\n};\r\n\r\n// Hides game status related UI\r\nconst resetGameStatusUI = () => {\r\n  gameSummary.container.style.visibility = 'hidden';\r\n};\r\n\r\nexport {\r\n  updatePlayerStatusName,\r\n  updateHP,\r\n  updateShipsStatus,\r\n  turnIndicator,\r\n  renderGameMessage,\r\n  initializeGameStatusUI,\r\n  displayWinner,\r\n  resetGameStatusUI,\r\n};\r\n","import activePlayer from './activePlayer';\r\nimport { gameboardUI, controlsUI } from './selectors';\r\nimport renderLoadingScreen from './loadingScreen';\r\nimport { CELL_STATES, COMPUTER_PLAYER } from './constants';\r\nimport {\r\n  togglePlayAgainBtn,\r\n  renderGameboard,\r\n  renderSunkShip,\r\n  updateGameboard,\r\n  toggleEndTurnBtnText,\r\n} from './gameplayUI';\r\nimport {\r\n  displayWinner,\r\n  initializeGameStatusUI,\r\n  renderGameMessage,\r\n  updateHP,\r\n  updateShipsStatus,\r\n} from './gameStatusUI';\r\n\r\n// Stores Gameboard state\r\nconst gameState = {\r\n  hasAttacked: false,\r\n  hasWinner: false,\r\n};\r\n\r\n// Creates a game summary to pass as parameter to displayWinner()\r\nconst createSummary = () => {\r\n  const flatGameboard = activePlayer.oppGameboard.board.flat();\r\n\r\n  const shipsSunk = Object.values(activePlayer.oppGameboard.ships).length;\r\n\r\n  const turnsTaken = flatGameboard.filter((cell) => cell).length;\r\n\r\n  const shipsLost = Object.values(activePlayer.gameboard.ships).filter(\r\n    (ship) => ship.hasSunk,\r\n  ).length;\r\n\r\n  const misses = flatGameboard.filter(\r\n    (cell) => cell === CELL_STATES.MISS,\r\n  ).length;\r\n\r\n  const accuracy = (((turnsTaken - misses) / turnsTaken) * 100).toFixed(2);\r\n\r\n  return {\r\n    shipsSunk,\r\n    turnsTaken,\r\n    shipsLost,\r\n    misses,\r\n    accuracy,\r\n  };\r\n};\r\n\r\n// Declares winner and ends the game\r\nconst declareWinner = () => {\r\n  if (!activePlayer.oppGameboard.isAllSunk()) return;\r\n\r\n  gameState.hasWinner = true;\r\n  displayWinner(createSummary());\r\n  togglePlayAgainBtn();\r\n};\r\n\r\n// Evaluates attack result for updating the gameboard state\r\nconst evaluateAttackResult = (row, col) => {\r\n  const attackResult =\r\n    activePlayer.oppGameboard.board[row][col] !== CELL_STATES.MISS\r\n      ? CELL_STATES.HIT\r\n      : CELL_STATES.MISS;\r\n\r\n  updateGameboard(gameboardUI.board, row, col, attackResult);\r\n\r\n  if (attackResult === CELL_STATES.HIT) updateHP(activePlayer.opponent.name);\r\n\r\n  if (activePlayer.oppGameboard.board[row][col].hasSunk) {\r\n    renderSunkShip(\r\n      gameboardUI.board,\r\n      activePlayer.oppGameboard.board[row][col],\r\n      updateShipsStatus(\r\n        activePlayer.opponent.name,\r\n        activePlayer.oppGameboard.board[row][col],\r\n      ),\r\n    );\r\n    renderGameMessage(CELL_STATES.SUNK);\r\n    declareWinner();\r\n  } else renderGameMessage(attackResult);\r\n};\r\n\r\n// Calls receiveAttack on the opponent's board and updates the gameboard\r\nconst attack = (e) => {\r\n  if (!e.target.closest('.cell')) return;\r\n\r\n  if (\r\n    e.target.classList.contains(CELL_STATES.HIT) ||\r\n    e.target.classList.contains(CELL_STATES.MISS)\r\n  ) {\r\n    renderGameMessage('invalid');\r\n    return;\r\n  }\r\n\r\n  const row = Number(e.target.dataset.row);\r\n  const col = Number(e.target.dataset.col);\r\n\r\n  activePlayer.oppGameboard.receiveAttack([row, col]);\r\n\r\n  evaluateAttackResult(row, col);\r\n\r\n  gameState.hasAttacked = true;\r\n\r\n  gameboardUI.board.removeEventListener('click', attack);\r\n};\r\n\r\n// Handles the computer player's turn\r\nconst handleComputerTurn = () => {\r\n  setTimeout(() => {\r\n    const [row, col] = activePlayer.player.autoAttack(\r\n      activePlayer.oppGameboard,\r\n    );\r\n    evaluateAttackResult(row, col);\r\n\r\n    gameState.hasAttacked = true;\r\n  }, 1000);\r\n};\r\n\r\n// Adds event listener to opponent's gameboard for attacking\r\nconst initializeActiveGameboard = () => {\r\n  gameboardUI.board.addEventListener('click', attack);\r\n};\r\n\r\n// Removes the setup dialog and renders the actual gameboard\r\nconst startTurn = () => {\r\n  gameboardUI.board.innerHTML = '';\r\n  if (activePlayer.player.name !== COMPUTER_PLAYER)\r\n    gameboardUI.yourBoard.innerHTML = '';\r\n\r\n  renderGameboard(gameboardUI.board, activePlayer.oppGameboard);\r\n\r\n  if (activePlayer.player.name !== COMPUTER_PLAYER) {\r\n    initializeActiveGameboard();\r\n    renderGameboard(gameboardUI.yourBoard, activePlayer.gameboard);\r\n  } else {\r\n    handleComputerTurn();\r\n  }\r\n\r\n  initializeGameStatusUI(activePlayer.player.name);\r\n};\r\n\r\n// Ends the turn and switches the board and activePlayer\r\nconst endTurn = () => {\r\n  if (gameState.hasWinner) return;\r\n\r\n  if (!gameState.hasAttacked) {\r\n    renderGameMessage('blocked');\r\n    return;\r\n  }\r\n\r\n  if (\r\n    activePlayer.player.name !== COMPUTER_PLAYER &&\r\n    activePlayer.opponent.name !== COMPUTER_PLAYER\r\n  )\r\n    renderLoadingScreen();\r\n\r\n  activePlayer.switch();\r\n  gameState.hasAttacked = false;\r\n  renderGameMessage('clear');\r\n  toggleEndTurnBtnText();\r\n  startTurn();\r\n};\r\n\r\ncontrolsUI.endTurn.addEventListener('click', endTurn);\r\n\r\nexport { startTurn, gameState };\r\n","import { renderGameboard } from './gameplayUI';\r\nimport { startScreen } from './selectors';\r\nimport createElement from './helpers';\r\nimport { CELL_STATES, GAME_MODES, ORIENTATIONS } from './constants';\r\n\r\n// Stores initial HTML structure\r\nconst initialHTML = startScreen.setupContainer.innerHTML;\r\n\r\n// Helper function for adjusting dialog's UI for ship placement\r\nconst adjustBoardSetupDialog = () => {\r\n  startScreen.title.style.fontSize = 'var(--header-font-size)';\r\n  startScreen.setupContainer.innerHTML = '';\r\n};\r\n\r\n// Renders ships and ship information for setup\r\nconst renderShipSelection = (ships) => {\r\n  adjustBoardSetupDialog();\r\n\r\n  const shipsContainer = createElement('div', ['ships-container']);\r\n\r\n  Object.entries(ships).forEach(([ship, { length }]) => {\r\n    const shipEntry = createElement('div', ['ship']);\r\n    const shipName = createElement('p', ['ship-name']);\r\n    const shipHealth = createElement('p', ['ship-health']);\r\n    const shipBtns = createElement('div', ['ship-btns']);\r\n    const orientationBtn = createElement('button', ['change-orientation-btn']);\r\n    const undoBtn = createElement('button', ['undo-btn']);\r\n    const shipModel = createElement('div', [`${ship}`, 'ship-model']);\r\n\r\n    shipName.textContent =\r\n      `${ship}`.charAt(0).toUpperCase() + `${ship}`.slice(1);\r\n    shipHealth.textContent = `HP: ${length}`;\r\n    orientationBtn.textContent = '↔';\r\n    undoBtn.textContent = '↺';\r\n\r\n    shipEntry.dataset.ship = ship;\r\n    orientationBtn.dataset.orientation = ORIENTATIONS.HORIZONTAL;\r\n\r\n    shipModel.style.width = `${length * 20}%`;\r\n\r\n    shipBtns.append(orientationBtn, undoBtn);\r\n    shipEntry.append(shipName, shipHealth, shipBtns, shipModel);\r\n    shipsContainer.appendChild(shipEntry);\r\n  });\r\n\r\n  return shipsContainer;\r\n};\r\n\r\n// Renders section for ship setup/selection\r\nconst renderShipSetup = (ships) => {\r\n  const shipSetupContainer = createElement('div', ['ship-setup-container']);\r\n  const shipSetupLabel = createElement('p', ['ship-setup-label']);\r\n  const shipsContainer = renderShipSelection(ships);\r\n\r\n  shipSetupLabel.textContent = 'Position your ships!';\r\n\r\n  startScreen.setupContainer.appendChild(shipSetupContainer);\r\n  shipSetupContainer.append(shipSetupLabel, shipsContainer);\r\n\r\n  return shipsContainer;\r\n};\r\n\r\n// Renders board for ship placement\r\nconst renderShipPlacementBoard = (playerBoard) => {\r\n  const shipPlacementContainer = createElement('div', [\r\n    'ship-placement-container',\r\n  ]);\r\n  const shipPlacementBoard = createElement('div', ['ship-placement-board']);\r\n\r\n  startScreen.setupContainer.appendChild(shipPlacementContainer);\r\n  shipPlacementContainer.appendChild(shipPlacementBoard);\r\n\r\n  renderGameboard(shipPlacementBoard, playerBoard);\r\n\r\n  return shipPlacementBoard;\r\n};\r\n\r\n// Renders an input where players can enter their desired name\r\nconst renderPlayerNameInput = () => {\r\n  const inputNameLabel = createElement('p', ['input-name-label']);\r\n  const inputName = createElement('input', ['input-name']);\r\n\r\n  inputNameLabel.textContent = 'Enter your name:';\r\n  inputName.placeholder = 'ex: Altria';\r\n  inputName.style.fontSize = '1.25rem';\r\n\r\n  return { inputNameLabel, inputName };\r\n};\r\n\r\n// Renders button to start game or pass setup to another player\r\nconst renderActionBtn = (mode) => {\r\n  const actionBtnContainer = createElement('div', ['action-btn-container']);\r\n  const actionBtn = createElement('button', ['action-btn']);\r\n\r\n  actionBtn.textContent =\r\n    mode === GAME_MODES.VS_PLAYER ? 'Next Player' : 'Start Game';\r\n\r\n  actionBtnContainer.appendChild(actionBtn);\r\n\r\n  return { actionBtnContainer, actionBtn };\r\n};\r\n\r\n// Renders section for player name input and game start button or next player button\r\nconst renderPlayerSetup = (mode) => {\r\n  const nameAndActionBtnContainer = createElement('div', [\r\n    'name-start-container',\r\n  ]);\r\n  const errorContainer = createElement('div', ['error-container']);\r\n  const { inputNameLabel, inputName } = renderPlayerNameInput();\r\n\r\n  const { actionBtnContainer, actionBtn } = renderActionBtn(mode);\r\n\r\n  startScreen.setupContainer.appendChild(nameAndActionBtnContainer);\r\n  nameAndActionBtnContainer.append(\r\n    inputNameLabel,\r\n    inputName,\r\n    actionBtnContainer,\r\n    errorContainer,\r\n  );\r\n\r\n  return { inputName, actionBtn, errorContainer };\r\n};\r\n\r\n// Renders options to play against another player or computer\r\nconst renderGameModeOptions = () => {\r\n  startScreen.startBtn.remove();\r\n\r\n  const gameModesContainer = createElement('div', ['game-modes-container']);\r\n  const vsPlayerBtn = createElement('button', ['vs-player']);\r\n  const vsComputerBtn = createElement('button', ['vs-computer']);\r\n\r\n  vsPlayerBtn.textContent = 'VS Player';\r\n  vsComputerBtn.textContent = 'VS Computer';\r\n\r\n  gameModesContainer.append(vsPlayerBtn, vsComputerBtn);\r\n  startScreen.setupContainer.appendChild(gameModesContainer);\r\n\r\n  return { vsPlayerBtn, vsComputerBtn };\r\n};\r\n\r\n// Updates the display of a cell where a ship is placed or removed\r\nconst updateShipCellsUI = (ship, name, isPlaced) => {\r\n  ship.position.forEach((cell) => {\r\n    const [row, col] = cell;\r\n    const targetCell = document.querySelector(\r\n      `[data-row=\"${row}\"][data-col=\"${col}\"]`,\r\n    );\r\n\r\n    if (!isPlaced) targetCell.classList.remove(CELL_STATES.HAS_SHIP, name);\r\n    else targetCell.classList.add(CELL_STATES.HAS_SHIP, name);\r\n  });\r\n};\r\n\r\n// Shows ship preview while hovering on board as placement guide\r\nconst handlePlacementHover = (ship, orientation, cell, isHovering = true) => {\r\n  const row = Number(cell.dataset.row);\r\n  const col = Number(cell.dataset.col);\r\n  const isHorizontal = orientation === ORIENTATIONS.HORIZONTAL;\r\n\r\n  let hoveredRow = row;\r\n  let hoveredCol = col;\r\n\r\n  for (let i = 0; i < ship.length; i += 1) {\r\n    hoveredRow = isHorizontal ? row : row + i;\r\n    hoveredCol = isHorizontal ? col + i : col;\r\n\r\n    if (hoveredRow > 9 || hoveredCol > 9) return;\r\n\r\n    const hoveredCell = document.querySelector(\r\n      `[data-row=\"${hoveredRow}\"][data-col=\"${hoveredCol}\"]`,\r\n    );\r\n\r\n    if (isHovering) {\r\n      if (\r\n        (isHorizontal && col + ship.length - 1 > 9) ||\r\n        (!isHorizontal && row + ship.length - 1 > 9)\r\n      )\r\n        hoveredCell.style.backgroundColor = '#C0392BB3';\r\n      else hoveredCell.style.backgroundColor = '#808080B3';\r\n      hoveredCell.style.transition = '0ms';\r\n    } else hoveredCell.style.backgroundColor = '';\r\n  }\r\n};\r\n\r\n// Renders start screen again when Play Button is clicked\r\nconst rerenderStartScreen = () => {\r\n  startScreen.title.style.fontSize = '';\r\n  startScreen.setupContainer.innerHTML = '';\r\n\r\n  startScreen.setupContainer.innerHTML = initialHTML;\r\n};\r\n\r\nexport {\r\n  renderGameModeOptions,\r\n  renderShipSetup,\r\n  renderShipPlacementBoard,\r\n  renderPlayerSetup,\r\n  updateShipCellsUI,\r\n  handlePlacementHover,\r\n  rerenderStartScreen,\r\n};\r\n","import { startScreen } from './selectors';\r\nimport { initializePlayers } from './createPlayers';\r\nimport activePlayer from './activePlayer';\r\nimport { startTurn } from './gameplayController';\r\nimport { renderErrorMsg } from './gameplayUI';\r\nimport renderLoadingScreen from './loadingScreen';\r\nimport {\r\n  COMPUTER_PLAYER,\r\n  GAME_MODES,\r\n  NEXT_PLAYER,\r\n  ORIENTATIONS,\r\n} from './constants';\r\nimport {\r\n  renderGameModeOptions,\r\n  renderShipSetup,\r\n  renderShipPlacementBoard,\r\n  renderPlayerSetup,\r\n  updateShipCellsUI,\r\n  handlePlacementHover,\r\n} from './gameSetupUI';\r\nimport { updatePlayerStatusName } from './gameStatusUI';\r\n\r\n// Stores recently picked ship information\r\nconst pickedShip = {\r\n  ship: null,\r\n  name: null,\r\n  orientation: null,\r\n};\r\n\r\nconst resetPickedShip = () => {\r\n  pickedShip.ship = null;\r\n  pickedShip.name = null;\r\n  pickedShip.orientation = null;\r\n};\r\n\r\n// Picks a ship to place on board\r\nconst pickShipToPlace = (e) => {\r\n  if (e.target.classList.contains('is-placed')) return;\r\n  if (pickedShip.ship) return;\r\n\r\n  const shipName = e.target.closest('[data-ship]')?.dataset.ship;\r\n  pickedShip.ship = activePlayer.gameboard.ships[shipName];\r\n  pickedShip.name = shipName;\r\n  pickedShip.orientation = e.target\r\n    .closest('[data-ship]')\r\n    .querySelector('[data-orientation]').dataset.orientation;\r\n\r\n  e.target.classList.add('is-placed');\r\n};\r\n\r\n// Toggles ship orientation by clicking a button\r\nconst changeOrientation = (e) => {\r\n  if (pickedShip.orientation) return;\r\n\r\n  if (e.target.dataset.orientation === ORIENTATIONS.HORIZONTAL) {\r\n    e.target.textContent = '↕';\r\n    e.target.dataset.orientation = ORIENTATIONS.VERTICAL;\r\n  } else {\r\n    e.target.textContent = '↔';\r\n    e.target.dataset.orientation = ORIENTATIONS.HORIZONTAL;\r\n  }\r\n};\r\n\r\n// Removes ship from board so it can be placed again\r\nconst resetShipPlacement = (e) => {\r\n  const shipName = e.target.closest('[data-ship]').dataset.ship;\r\n  const ship = activePlayer.gameboard.ships[shipName];\r\n  const shipModel = e.target\r\n    .closest('[data-ship]')\r\n    .querySelector('.ship-model');\r\n\r\n  updateShipCellsUI(ship, shipName, false);\r\n  activePlayer.gameboard.removeShip(ship);\r\n  shipModel.classList.remove('is-placed');\r\n  resetPickedShip();\r\n};\r\n\r\n// Adds event listeners to shipsContainer elements\r\nconst initializeShipSetup = (ships) => {\r\n  const shipsContainer = renderShipSetup(ships);\r\n\r\n  shipsContainer.addEventListener('click', (e) => {\r\n    if (!e.target.closest('[data-ship]')) return;\r\n\r\n    if (e.target.classList.contains('ship-model')) pickShipToPlace(e);\r\n    if (e.target.classList.contains('change-orientation-btn'))\r\n      changeOrientation(e);\r\n    if (e.target.classList.contains('undo-btn')) resetShipPlacement(e);\r\n  });\r\n};\r\n\r\n// Shows/Clears ship placement preview on board\r\nconst handleHoverShipOnBoard = (e, ship, orientation, isHovering = true) => {\r\n  if (!e.target.closest('.cell')) return;\r\n  if (!pickedShip.ship) return;\r\n\r\n  handlePlacementHover(ship, orientation, e.target, isHovering);\r\n};\r\n\r\n// Calls placeShip method with extracted row and col from a clicked cell\r\nconst placeShipOnBoard = (e, ship, orientation) => {\r\n  if (!e.target.closest('.cell')) return;\r\n  if (!pickedShip.ship) return;\r\n\r\n  handlePlacementHover(ship, orientation, e.target, false);\r\n\r\n  const row = Number(e.target.dataset.row);\r\n  const col = Number(e.target.dataset.col);\r\n\r\n  const placeShip = activePlayer.gameboard.placeShip(\r\n    ship,\r\n    [row, col],\r\n    orientation,\r\n  );\r\n  // Change behavior later to reflect on UI\r\n  if (!placeShip.success) return;\r\n\r\n  updateShipCellsUI(ship, pickedShip.name, true);\r\n\r\n  resetPickedShip();\r\n};\r\n\r\n// Adds event listener to received ship placement board\r\nconst initializeShipPlacementBoard = (playerBoard) => {\r\n  const board = renderShipPlacementBoard(playerBoard);\r\n\r\n  board.addEventListener('click', (e) =>\r\n    placeShipOnBoard(e, pickedShip.ship, pickedShip.orientation),\r\n  );\r\n  board.addEventListener('mouseover', (e) =>\r\n    handleHoverShipOnBoard(e, pickedShip.ship, pickedShip.orientation),\r\n  );\r\n  board.addEventListener('mouseout', (e) =>\r\n    handleHoverShipOnBoard(e, pickedShip.ship, pickedShip.orientation, false),\r\n  );\r\n  board.addEventListener('touchstart', (e) =>\r\n    handleHoverShipOnBoard(e, pickedShip.ship, pickedShip.orientation),\r\n  );\r\n  board.addEventListener('touchend', (e) =>\r\n    handleHoverShipOnBoard(e, pickedShip.ship, pickedShip.orientation, false),\r\n  );\r\n};\r\n\r\nconst playerSetup = {\r\n  // Adds event listener to received action button\r\n  initialize(mode) {\r\n    const { inputName, actionBtn, errorContainer } = renderPlayerSetup(mode);\r\n\r\n    actionBtn.addEventListener('click', () =>\r\n      this.validate(mode, inputName.value, errorContainer),\r\n    );\r\n  },\r\n\r\n  // Checks name's validity\r\n  validateName(name) {\r\n    if (!name) return { valid: false, message: 'Please enter a name!' };\r\n\r\n    if (\r\n      name === COMPUTER_PLAYER ||\r\n      name === COMPUTER_PLAYER.toLowerCase() ||\r\n      name === COMPUTER_PLAYER.toUpperCase()\r\n    )\r\n      return { valid: false, message: \"Name cannot be 'Computer'!\" };\r\n\r\n    if (name.trim().replace(/\\s+/g, ' ').length < 2)\r\n      return {\r\n        valid: false,\r\n        message: 'Name too short! Name should be at least 2 characters long.',\r\n      };\r\n\r\n    if (name.trim().replace(/\\s+/g, ' ').length > 15)\r\n      return {\r\n        valid: false,\r\n        message: 'Name too long! Name should be no longer than 12 characters.',\r\n      };\r\n\r\n    if (name.trim().replace(/\\s+/g, ' ') === activePlayer.opponent.name)\r\n      return {\r\n        valid: false,\r\n        message: 'Name cannot be the same as Player 1',\r\n      };\r\n\r\n    return { valid: true, name: name.trim().replace(/\\s+/g, ' ') };\r\n  },\r\n\r\n  // Validates setup before passing to next player or starting game\r\n  validate(mode, name, errContainer) {\r\n    if (!activePlayer.gameboard.isAllPlaced())\r\n      return renderErrorMsg(errContainer, 'Place all ships on board!');\r\n\r\n    const validatedName = this.validateName(name);\r\n\r\n    if (!validatedName.valid)\r\n      return renderErrorMsg(errContainer, validatedName.message);\r\n\r\n    if (mode === GAME_MODES.VS_COMPUTER || mode === NEXT_PLAYER)\r\n      return this.startGame(validatedName.name, mode);\r\n\r\n    return this.nextPlayer(validatedName.name);\r\n  },\r\n\r\n  // Saves the player's name to the Player class\r\n  saveName(name) {\r\n    activePlayer.player.name = name;\r\n  },\r\n\r\n  // Ends setup phase and starts the game\r\n  startGame(name, mode) {\r\n    this.saveName(name);\r\n    if (mode !== GAME_MODES.VS_COMPUTER) {\r\n      activePlayer.switch();\r\n      renderLoadingScreen();\r\n    }\r\n\r\n    if (mode === GAME_MODES.VS_COMPUTER) {\r\n      activePlayer.opponent.autoPlaceShips();\r\n    }\r\n\r\n    startScreen.dialog.close();\r\n    updatePlayerStatusName(\r\n      activePlayer.player.name,\r\n      activePlayer.opponent.name,\r\n    );\r\n    startTurn();\r\n  },\r\n\r\n  // Ends active player's setup phase and passes it to the next player\r\n  nextPlayer(name) {\r\n    renderLoadingScreen();\r\n    this.saveName(name);\r\n    activePlayer.switch();\r\n    initializeShipSetup(activePlayer.gameboard.ships);\r\n    initializeShipPlacementBoard(activePlayer.gameboard);\r\n    this.initialize(NEXT_PLAYER);\r\n  },\r\n};\r\n\r\n// Calls functions to render UI of ship placement phase\r\nconst startShipPlacementPhase = (mode) => {\r\n  initializePlayers(mode);\r\n  activePlayer.assign();\r\n  initializeShipSetup(activePlayer.gameboard.ships);\r\n  initializeShipPlacementBoard(activePlayer.gameboard);\r\n  playerSetup.initialize(mode);\r\n};\r\n\r\n// Adds event listeners to received vsPlayer and vsComputer buttons\r\nconst initializeGameModeOptions = () => {\r\n  const { vsPlayerBtn, vsComputerBtn } = renderGameModeOptions();\r\n\r\n  vsPlayerBtn.addEventListener('click', () =>\r\n    startShipPlacementPhase(GAME_MODES.VS_PLAYER),\r\n  );\r\n  vsComputerBtn.addEventListener('click', () =>\r\n    startShipPlacementPhase(GAME_MODES.VS_COMPUTER),\r\n  );\r\n};\r\n\r\nconst initializeGame = () => {\r\n  if (startScreen.dialog) startScreen.dialog.showModal();\r\n  startScreen.startBtn = document.querySelector('.start-new-game');\r\n  startScreen.startBtn.addEventListener('click', initializeGameModeOptions);\r\n};\r\n\r\nexport default initializeGame;\r\n","import activePlayer from './activePlayer';\r\nimport { resetPlayers } from './createPlayers';\r\nimport { gameState } from './gameplayController';\r\nimport { togglePlayAgainBtn } from './gameplayUI';\r\nimport initializeGame from './gameSetupController';\r\nimport { rerenderStartScreen } from './gameSetupUI';\r\nimport { resetGameStatusUI } from './gameStatusUI';\r\nimport { controlsUI, gameboardUI, playerStatsUI } from './selectors';\r\n\r\nconst resetRemainingShipsUI = () => {\r\n  const shipEl = document.querySelectorAll('.remaining-ships-container div');\r\n\r\n  shipEl.forEach((ship) => {\r\n    const shipDiv = ship;\r\n\r\n    shipDiv.textContent = '';\r\n    shipDiv.style.filter = '';\r\n  });\r\n};\r\n\r\nconst resetGame = () => {\r\n  gameState.hasAttacked = false;\r\n  gameState.hasWinner = false;\r\n  resetPlayers();\r\n  activePlayer.reset();\r\n\r\n  playerStatsUI.p1Health.dataset.hp = 100;\r\n  playerStatsUI.p2Health.dataset.hp = 100;\r\n  playerStatsUI.p1Health.style.width = '100%';\r\n  playerStatsUI.p2Health.style.width = '100%';\r\n  playerStatsUI.p1Health.style.backgroundColor = '';\r\n  playerStatsUI.p2Health.style.backgroundColor = '';\r\n  resetRemainingShipsUI();\r\n\r\n  gameboardUI.yourBoard.innerHTML = '';\r\n  gameboardUI.board.innerHTML = '';\r\n  togglePlayAgainBtn();\r\n\r\n  resetGameStatusUI();\r\n  rerenderStartScreen();\r\n\r\n  initializeGame();\r\n};\r\n\r\ncontrolsUI.playAgain.addEventListener('click', resetGame);\r\n\r\nexport default resetGame;\r\n","import './styles/main.css';\r\nimport initializeGame from './scripts/gameSetupController';\r\n// eslint-disable-next-line no-unused-vars\r\nimport resetGame from './scripts/resetGame';\r\n\r\nwindow.addEventListener('DOMContentLoaded', initializeGame);\r\n"],"names":["module","exports","styleElement","nonce","setAttribute","stylesInDOM","getIndexByIdentifier","identifier","result","i","length","modulesToDom","list","options","idCountMap","identifiers","item","id","base","count","concat","indexByIdentifier","obj","css","media","sourceMap","supports","layer","references","updater","addElementStyle","byIndex","splice","push","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","styleSheet","cssText","firstChild","removeChild","appendChild","document","createTextNode","___CSS_LOADER_URL_IMPORT_0___","URL","___CSS_LOADER_URL_IMPORT_1___","___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","___CSS_LOADER_URL_REPLACEMENT_1___","cssWithMappingToString","toString","this","map","content","needLayer","join","modules","dedupe","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","url","String","__esModule","default","test","slice","hash","needQuotes","replace","element","createElement","setAttributes","attributes","insert","memo","style","target","styleTarget","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","insertStyleElement","styleTagTransform","apply","parentNode","removeStyleElement","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","Function","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","p","b","baseURI","self","href","nc","locals","startScreen","dialog","title","startBtn","setupContainer","loadingScreen","message","loader","readyBtn","gameboardUI","board","yourBoard","playerStatsUI","p1Stats","p1Name","p1Health","p1Ships","p2Stats","p2Name","p2Health","p2Ships","gameStatusUI","turnDisplay","messageDisplay","controlsUI","endTurn","playAgainContainer","playAgain","gameSummary","container","winner","summary","constructor","name","hitCount","hasSunk","position","hit","getShip","GAME_MODES","NEXT_PLAYER","COMPUTER_PLAYER","CELL_STATES","ORIENTATIONS","SHIP_OFFSETS","Array","fill","ships","carrier","Ship","battleship","cruiser","submarine","destroyer","occupied","Set","miss","placeShip","ship","start","orientation","row","col","success","cell","has","currentRow","currentCol","add","removeShip","forEach","coord","delete","receiveAttack","coords","isAllPlaced","values","every","isAllSunk","gameboard","Gameboard","Player","super","restrictedCells","lastHit","nextHit","followingHits","directionHitCount","isSwitched","targetQueue","autoPlaceShips","Math","random","autoAttack","opponent","shift","rowSize","colSize","floor","_ref","newRow","newCol","attempts","invalid","unlikely","validDirections","filter","_ref2","dirRow","dirCol","r","c","nextRow","nextCol","nextTarget","validCoord","deferredHits","_ref3","isAdjacent","arguments","shortestLength","min","isEarlyGame","flat","availableRow","availableCol","isLeftBlocked","isRightBlocked","isUpBlocked","isDownBlocked","_ref4","players","player1","player2","player","oppGameboard","assign","switch","reset","displayReadyBtn","display","addEventListener","hideLoadingScreen","close","renderLoadingScreen","showModal","setTimeout","type","classList","renderGameboard","boardContainer","playerBoard","activePlayer","rowIndex","colIndex","dataset","textContent","updateGameboard","boardUI","state","renderErrorMsg","errorMsg","togglePlayAgainBtn","visibility","renderGameMessage","gameMessage","sunk","blocked","clear","gameState","hasAttacked","hasWinner","evaluateAttackResult","attackResult","playerName","totalHP","reduce","total","damage","toFixed","playerHealth","currentHP","parseFloat","hp","newHP","max","width","backgroundColor","updateHP","renderSunkShip","pos","updateShipsStatus","sunkShip","shipsSunk","turnsTaken","shipsLost","misses","accuracy","innerHTML","displayWinner","createSummary","flatGameboard","attack","closest","contains","Number","removeEventListener","startTurn","turnIndicator","initializeGameStatusUI","initialHTML","updateShipCellsUI","isPlaced","targetCell","handlePlacementHover","isHovering","isHorizontal","hoveredRow","hoveredCol","hoveredCell","transition","pickedShip","resetPickedShip","initializeShipSetup","shipsContainer","shipSetupContainer","shipSetupLabel","fontSize","entries","shipEntry","shipName","shipHealth","shipBtns","orientationBtn","undoBtn","shipModel","charAt","append","renderShipSelection","renderShipSetup","pickShipToPlace","changeOrientation","resetShipPlacement","handleHoverShipOnBoard","initializeShipPlacementBoard","shipPlacementContainer","shipPlacementBoard","renderShipPlacementBoard","placeShipOnBoard","playerSetup","initialize","mode","inputName","actionBtn","errorContainer","nameAndActionBtnContainer","inputNameLabel","renderPlayerNameInput","placeholder","actionBtnContainer","renderActionBtn","renderPlayerSetup","validate","value","validateName","toLowerCase","valid","trim","errContainer","validatedName","startGame","nextPlayer","saveName","updatePlayerStatusName","player1Name","player2Name","startShipPlacementPhase","ComputerPlayer","initializePlayers","initializeGameModeOptions","vsPlayerBtn","vsComputerBtn","renderGameModeOptions","gameModesContainer","initializeGame","resetGame","querySelectorAll","shipDiv"],"sourceRoot":""}